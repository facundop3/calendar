{"version":3,"sources":["context.ts","reducer/helper.ts","reducer/reducer.ts","reducer/actions.ts","components/elements/Button.tsx","components/elements/Input.tsx","utils/a11y.ts","theme.ts","components/elements/Select.tsx","components/elements/TimePicker.tsx","utils/arrays.ts","components/page/Modal.tsx","components/calendar/TaskList.tsx","components/calendar/DayBox.tsx","components/calendar/Week.tsx","components/calendar/Month.tsx","utils/dates.ts","components/calendar/WeekHeader.tsx","components/calendar/Year.tsx","components/calendar/Calendar.tsx","components/calendar/MonthSelector.tsx","components/calendar/MiniCalendar.tsx","ThemeContext.tsx","components/page/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["calendarState","state","localStorage","getItem","JSON","parse","currentDate","Date","getTime","currentDayId","currentDateMin","currentDayIdMin","selectedDayMini","calendarMode","tasks","calendarContext","React","createContext","persist","setItem","stringify","calendarReducer","action","type","Object","objectSpread","payload","changeCalendarMode","_action$payload$task","task","title","time","day","concat","toConsumableArray","addTask","dayId","setSelectedDay","toggleModal","newState","mini","getMonth","year","getFullYear","defineProperty","nextMonth","prevMonth","prevYear","nextYear","Btn","styled","button","_templateObject","_ref","size","_ref2","_ref3","_ref4","bg","Button","props","ariaLabel","children","_props$type","onClick","otherProps","objectWithoutProperties","react_default","a","createElement","assign","aria-label","className","ev","stopPropagation","InputContainer","label","Input_templateObject","InputDescription","small","_templateObject2","Input","placeholder","required","value","handleChange","handleEnter","aria-required","target","focus","onChange","onKeyDown","handleEnterPress","callback","key","backgroundColor","theme","light","dark","textColor","hoverColor","oppositeBlue","uuidv1","require","SelectedOption","Select_templateObject","OptionList","div","Select_templateObject2","OptionItem","_templateObject3","SelectContainer","_templateObject4","Select","defaultValue","options","_useState","useState","_useState2","slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selected","setSelected","handleSelect","innerText","useEffect","handleClick","tabIndex","onKeyPress","map","option","TimePickerContainer","TimePicker_templateObject","TimePickerValue","TimePicker_templateObject2","ControlsContainer","TimePicker_templateObject3","PlusIcon","Plus","TimePicker_templateObject4","MinusIcon","Minus","_templateObject5","TimePicker","date","currentTime","setCurrentTime","_currentTime$toTimeSt","toTimeString","split","_currentTime$toTimeSt2","hours","minutes","changeMinutes","sign","fiveMinutesInMiliseconds","elements_Button","chunkArray","myArray","chunk_size","index","arrayLength","length","tempArray","myChunk","slice","push","CloseIcon","Close","Modal_templateObject","ModalContainer","Modal_templateObject2","TaskName","Modal_templateObject3","Modal","dayIndex","dispatch","showTimePicker","setShowTimePicker","setTime","_useState5","_useState6","setTitle","saveTask","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","style","left","position","timeStamp","toDateString","elements_Input","elements_TimePicker","Task","li","TaskList_templateObject","Container","ul","TaskList_templateObject2","TaskList","DayBoxContainer","DayBox_templateObject","DayContent","DayBox_templateObject2","DateContainer","p","DayBox_templateObject3","today","selectedDay","DayBox","_props$day","disabled","_props$state","todayTasks","filter","todayTimeStamp","setHours","aria-disabled","page_Modal","getDate","calendar_TaskList","Week","days","Consumer","display","calendar_DayBox","MonthContainer","Month_templateObject","Month","monthDays","monthNumnber","month","lastMonthDay","Array","fill","e","getDaysOnMonth","_monthDays$slice","firstDay","_monthDays$slice3","lastDay","firstBlanks","getDay","LastBlanks","blankFilledWeeks","weekDays","calendar_Week","container","justifyContent","alignItems","width","WeekHeader","FourMonths","Year_templateObject","MonthTitle","Year_templateObject2","MonthCalendar","Year_templateObject3","memo","monthDates","monthNumber","fourMonthOneElem","zoom","months","calendar_WeekHeader","calendar_Month","prevProps","nextProps","CalendarContainer","Calendar_templateObject","Calendar","Fragment","calendar_Year","MonthSelectorContainer","MonthSelector_templateObject","SelectedMonthContainer","MonthSelector_templateObject2","NavigateNextIcon","NavigateNext","MonthSelector_templateObject3","NavigateBeforeIcon","NavigateBefore","MonthSelector_templateObject4","withTheme","onlyYear","stringDateArr","previusDate","nextDate","arial-label","MiniCalendarContainer","MiniCalendar_templateObject","MiniCalendar","calendar_MonthSelector","ThemeToggleContext","ThemeProvider","CalendarIcon","CalendarAlt","Header_templateObject","HeaderTitle","Header_templateObject2","Title","h2","Header_templateObject3","NavBar","nav","Header_templateObject4","Sky","Header_templateObject5","themeToggle","useContext","toggle","mode","elements_Select","App_templateObject","LeftSide","App_templateObject2","AppContainer","App_templateObject3","App","_useReducer","useReducer","_useReducer2","monthSelectorState","monthSelectorDispatcher","Provider","page_Header","App_Container","calendar_MiniCalendar","calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","_React$useState","_React$useState2","themeState","setThemeState","Wrapper","ThemeContext_templateObject","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28ce5c42.chunk.js","sourcesContent":["import React, { Dispatch } from \"react\";\nimport { CalendarState, Action } from \"./interfaces\";\n\nconst calendarState: {\n  state: CalendarState;\n  dispatch?: Dispatch<Action>;\n} = {\n  state: localStorage.getItem(\"calendarState\")\n    ? JSON.parse(\n        localStorage.getItem(\"calendarState\") || \"{calalendarMode:'Month'}\"\n      )\n    : {\n        currentDate: new Date().getTime(),\n        currentDayId: 0,\n        currentDateMin: new Date().getTime(),\n        currentDayIdMin: 0,\n        selectedDayMini: new Date().getTime(),\n        calendarMode: \"\",\n        tasks: []\n      }\n};\n\nexport const calendarContext = React.createContext(calendarState);\n","import { CalendarState, Action } from \"../interfaces\";\n\nexport const changeCalendarMode = (\n  state: CalendarState,\n  action: Action\n): CalendarState => {\n  const newState: CalendarState = {\n    ...state,\n    calendarMode: action.payload.calendarMode\n  };\n  return newState;\n};\n\nexport const addTask = (state: CalendarState, action: Action) => {\n  const { title, time, day } = action.payload.task;\n  const newState: CalendarState = {\n    ...state,\n    tasks: [...state.tasks, { title, time, day }],\n    currentDayId: 0\n  };\n  return newState;\n};\n\nexport const setSelectedDay = (state: CalendarState, action: Action) => {\n  const newState: CalendarState = {\n    ...state,\n    selectedDayMini: action.payload.dayId\n  };\n  return newState;\n};\n\nexport const toggleModal = (state: CalendarState, action: Action) => {\n  const newState: CalendarState = {\n    ...state,\n    currentDayId: action.payload.dayId\n  };\n\n  return newState;\n};\n\nexport const nextMonth = (state: CalendarState, action: Action) => {\n  const mini = action.payload ? action.payload.mini : false;\n  let newState: CalendarState;\n  const currentDate = mini ? \"currentDateMin\" : \"currentDate\";\n  if (new Date(state[currentDate]).getMonth() === 11) {\n    const year = new Date(state[currentDate]).getFullYear() + 1;\n    newState = {\n      ...state,\n      [currentDate]: new Date(year, 0).getTime()\n    };\n  } else {\n    newState = {\n      ...state,\n      [currentDate]: new Date(\n        new Date(state[currentDate]).getFullYear(),\n        new Date(state[currentDate]).getMonth() + 1\n      ).getTime()\n    };\n  }\n  return newState;\n};\n\nexport const prevMonth = (state: CalendarState, action: Action) => {\n  const mini = action.payload ? action.payload.mini : false;\n  let newState: CalendarState;\n  const currentDate = mini ? \"currentDateMin\" : \"currentDate\";\n  if (new Date(state[currentDate]).getMonth() === 0) {\n    newState = {\n      ...state,\n      [currentDate]: new Date(\n        new Date(state[currentDate]).getFullYear() - 1,\n        11\n      ).getTime()\n    };\n  } else {\n    newState = {\n      ...state,\n      [currentDate]: new Date(\n        new Date(state[currentDate]).getFullYear(),\n        new Date(state[currentDate]).getMonth() - 1\n      ).getTime()\n    };\n  }\n  return newState;\n};\n\nexport const prevYear = (state: CalendarState, action: Action) => {\n  const newState: CalendarState = {\n    ...state,\n    currentDate: new Date(\n      new Date(state.currentDate).getFullYear() - 1,\n      new Date(state.currentDate).getMonth()\n    ).getTime()\n  };\n  return newState;\n};\n\nexport const nextYear = (state: CalendarState, action: Action) => {\n  const newState: CalendarState = {\n    ...state,\n    currentDate: new Date(\n      new Date(state.currentDate).getFullYear() + 1,\n      new Date(state.currentDate).getMonth()\n    ).getTime()\n  };\n  return newState;\n};\n\nexport const persist = (state: CalendarState) => {\n  localStorage.setItem(\"calendarState\", JSON.stringify(state));\n  return state;\n};\n","import { CalendarState, Action } from \"../interfaces\";\nimport {\n  CHANGE_CALENDAR_MODE,\n  ADD_TASK,\n  SET_SELECTED_DAY,\n  TOGGLE_MODAL,\n  NEXT_MONTH,\n  PREV_MONTH,\n  PREV_YEAR,\n  NEXT_YEAR\n} from \"./actions\";\nimport {\n  changeCalendarMode,\n  persist,\n  addTask,\n  setSelectedDay,\n  toggleModal,\n  nextMonth,\n  prevMonth,\n  prevYear,\n  nextYear\n} from \"./helper\";\n\nexport const calendarReducer = (\n  state: CalendarState,\n  action: Action\n): CalendarState => {\n  switch (action.type) {\n    case CHANGE_CALENDAR_MODE: {\n      return persist(changeCalendarMode(state, action));\n    }\n    case ADD_TASK: {\n      return persist(addTask(state, action));\n    }\n    case SET_SELECTED_DAY: {\n      return persist(setSelectedDay(state, action));\n    }\n    case TOGGLE_MODAL: {\n      return persist(toggleModal(state, action));\n    }\n    case NEXT_MONTH: {\n      return persist(nextMonth(state, action));\n    }\n    case PREV_MONTH: {\n      return persist(prevMonth(state, action));\n    }\n    case PREV_YEAR: {\n      return persist(prevYear(state, action));\n    }\n    case NEXT_YEAR: {\n      return persist(nextYear(state, action));\n    }\n    default:\n      return state;\n  }\n};\n","export const CHANGE_CALENDAR_MODE = \"CHANGE_CALENDAR_MODE\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const SET_SELECTED_DAY = \"SET_SELECTED_DAY\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const NEXT_MONTH = \"NEXT_MONTH\";\nexport const PREV_MONTH = \"PREV_MONTH\";\nexport const NEXT_YEAR = \"NEXT_YEAR\";\nexport const PREV_YEAR = \"PREV_YEAR\";\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Btn = styled.button`\n  width: ${({ size }: { size?: number }) => size}px;\n  height: ${({ size }: { size?: number }) => size}px;\n  border-radius: ${({ size }: { size?: number }) => (size ? \"50%\" : \"\")};\n  margin: 0.25em;\n  background-color: ${({ bg }: any) => bg} !important;\n`;\n\nconst Button = (props: {\n  children: any;\n  ariaLabel: string;\n  type?: string;\n  style?: {};\n  size?: number;\n  transparent?: boolean;\n  bg?: string;\n  onClick?: (ev: any) => any;\n}) => {\n  const {\n    ariaLabel,\n    children,\n    type = \"is-link\",\n    onClick,\n    size,\n    ...otherProps\n  } = props;\n  const stopPropagation = (ev: any) => {\n    ev.stopPropagation();\n    onClick && onClick(ev);\n  };\n  return (\n    <Btn\n      bg={props.bg}\n      aria-label={ariaLabel}\n      className={`button ${type}`}\n      onClick={stopPropagation}\n      {...otherProps}\n    >\n      {children}\n    </Btn>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nconst InputDescription = styled.small`\n  color: gray;\n`;\nconst Input = (props: {\n  label: string;\n  placeholder?: string;\n  type: string;\n  required?: boolean;\n  value?: string;\n  handleChange: (ev: any) => any;\n  handleEnter: (ev: any) => void;\n}) => {\n  const handleInputClick = (ev: any) => {\n    ev.target.focus();\n  };\n  const {\n    label,\n    placeholder,\n    type,\n    required,\n    value,\n    handleChange,\n    handleEnter\n  } = props;\n  const onChange = (ev: any) => {\n    handleChange(ev.target.value);\n  };\n\n  return (\n    <InputContainer>\n      <InputDescription>{label}</InputDescription>\n      <input\n        className=\"input\"\n        placeholder={placeholder}\n        type={type}\n        aria-required={required}\n        onClick={handleInputClick}\n        value={value}\n        onChange={onChange}\n        onKeyDown={handleEnter}\n      />\n    </InputContainer>\n  );\n};\n\nexport default Input;\n","export const handleEnterPress = (ev: any, callback: (e: any) => any) => {\n  if (ev.key === \"Enter\") {\n    return callback(ev);\n  }\n};\n","import theme from \"styled-theming\";\n\nexport const backgroundColor = theme(\"mode\", {\n  light: \"#fafafa\",\n  dark: \"#222\"\n});\n\nexport const textColor = theme(\"mode\", {\n  light: \"#000\",\n  dark: \"#fff\"\n});\n\nexport const hoverColor = theme(\"mode\", {\n  light: \"#fafafa\",\n  dark: \"grey\"\n});\n\nexport const oppositeBlue = theme(\"mode\", {\n  light: \"#191970\",\n  dark: \"#0094d5\"\n});\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { handleEnterPress } from \"../../utils/a11y\";\nimport { textColor, hoverColor, backgroundColor } from \"../../theme\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst SelectedOption = styled.a`\n  color: ${textColor} !important;\n  border-radius: 4px;\n  &:hover {\n    background-color: ${hoverColor} !important;\n  }\n  &:focus {\n    background-color: ${hoverColor} !important;\n  }\n  &:focus-within {\n    background-color: ${hoverColor} !important;\n  }\n`;\n\nconst OptionList = styled.div`\n  background-color: ${hoverColor} !important;\n`;\nconst OptionItem = styled.a`\n  color: ${textColor} !important;\n  &:hover {\n    background-color: ${backgroundColor} !important;\n  }\n`;\n\nconst SelectContainer = styled.div`\n  /* Shame-css */\n  @media (max-width: 768px) {\n    height: 40px !important;\n    overflow: hidden;\n\n    &:hover {\n      height: 115px !important;\n    }\n    &:hover div {\n      position: absolute;\n    }\n    &:active {\n      height: 115px !important;\n    }\n    &:active div {\n      position: absolute;\n    }\n  }\n`;\nconst Select = (props: {\n  options: string[];\n  defaultValue: string;\n  handleChange?: (p: string) => any;\n}) => {\n  const { defaultValue, options, handleChange } = props;\n  const [showOptions, setShowOptions] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(defaultValue);\n  const handleSelect = (ev: any) => {\n    setSelected(ev.target.innerText);\n  };\n  useEffect(() => {\n    handleChange && handleChange(selected);\n  }, [selected]);\n  const handleClick = () => setShowOptions(!showOptions);\n  return (\n    <SelectContainer\n      className=\"navbar-item has-dropdown is-hoverable\"\n      onClick={() => handleClick()}\n      tabIndex={0}\n      onKeyPress={ev => handleEnterPress(ev, handleClick)}\n    >\n      <SelectedOption className=\"navbar-link\">{selected}</SelectedOption>\n      <OptionList className=\"navbar-dropdown\">\n        {options.map(option => (\n          <OptionItem\n            className=\"navbar-item\"\n            key={uuidv1()}\n            onClick={handleSelect}\n            onKeyPress={ev => handleEnterPress(ev, handleSelect)}\n            tabIndex={0}\n          >\n            {option}\n          </OptionItem>\n        ))}\n      </OptionList>\n    </SelectContainer>\n  );\n};\n\nexport default Select;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { Plus } from \"styled-icons/fa-solid/Plus\";\nimport { Minus } from \"styled-icons/typicons/Minus\";\n\nconst TimePickerContainer = styled.div`\n  display: flex;\n  max-width: 80px;\n`;\n\nconst TimePickerValue = styled.div`\n  padding: 0.5em;\n  display: flex;\n  p {\n    margin: 0;\n  }\n`;\nconst ControlsContainer = styled.div`\n  display: inline-grid;\n  zoom: 0.7;\n\n  button {\n    margin: 0;\n    padding: 4px 8px;\n  }\n`;\n\nconst PlusIcon = styled(Plus)`\n  height: 15px;\n`;\n\nconst MinusIcon = styled(Minus)`\n  height: 15px;\n`;\nconst TimePicker = (props: { date: Date; handleChange?: any }) => {\n  const { date, handleChange } = props;\n  const [currentTime, setCurrentTime] = useState<Date>(date);\n  const [hours, minutes] = currentTime.toTimeString().split(\":\");\n  const changeMinutes = (sign: number) => {\n    const fiveMinutesInMiliseconds = sign * 5 * 60000;\n    setCurrentTime(new Date(currentTime.getTime() + fiveMinutesInMiliseconds));\n  };\n  useEffect(() => {\n    handleChange && handleChange(currentTime);\n  }, [currentTime, handleChange]);\n  return (\n    <TimePickerContainer>\n      <TimePickerValue>\n        <p>\n          {hours}:{minutes}\n        </p>\n      </TimePickerValue>\n      <ControlsContainer>\n        <Button ariaLabel=\"Add 5 minutes\" onClick={() => changeMinutes(1)}>\n          <PlusIcon />\n        </Button>\n        <Button\n          ariaLabel=\"substract 5 minutes\"\n          onClick={() => changeMinutes(-1)}\n        >\n          <MinusIcon />\n        </Button>\n      </ControlsContainer>\n    </TimePickerContainer>\n  );\n};\n\nexport default TimePicker;\n","/**\n * Returns an array with arrays of the given size.\n *\n * @param myArray {Array} array to split\n * @param chunk_size {Integer} Size of every group\n */\nexport const chunkArray = (\n  myArray: any[],\n  chunk_size: number\n): Array<Array<any>> => {\n  let index: number = 0;\n  let arrayLength: number = myArray.length;\n  let tempArray: any[][] = [];\n\n  for (index = 0; index < arrayLength; index += chunk_size) {\n    const myChunk = myArray.slice(index, index + chunk_size);\n    // Do something if you want with the group\n    tempArray.push(myChunk);\n  }\n\n  return tempArray;\n};\n","import React, { useState } from \"react\";\nimport { Button, Input, TimePicker } from \"../elements\";\nimport { Day } from \"../../interfaces\";\nimport { Close } from \"styled-icons/material/Close\";\nimport styled from \"styled-components\";\nimport { textColor, backgroundColor, hoverColor } from \"../../theme\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport \"../animations/styles.css\";\nimport { TOGGLE_MODAL, ADD_TASK } from \"../../reducer/actions\";\nconst CloseIcon = styled(Close)`\n  height: 15px;\n  color: ${textColor};\n`;\nconst ModalContainer = styled.div`\n  min-height: 250px;\n  min-width: 200px;\n  position: absolute;\n  background-color: ${backgroundColor} !important;\n  color: ${textColor} !important;\n  z-index: 3;\n  border: 0.5px solid ${hoverColor} !important;\n`;\nconst TaskName = styled.div`\n  display: flex;\n  justify-content: space-between;\n  button {\n    background-color: transparent !important;\n  }\n`;\nconst Modal = (props: { dayIndex: number; day: Day; dispatch: any }) => {\n  const { dayIndex, day, dispatch } = props;\n\n  const [showTimePicker, setShowTimePicker] = useState<boolean>(false);\n  const [time, setTime] = useState<Date>(new Date());\n  const [title, setTitle] = useState<string>(\"\");\n  const toggleModal = () => {\n    dispatch({ type: TOGGLE_MODAL, payload: \"\" });\n  };\n  const stopPropagation = (ev: any) => {\n    ev.stopPropagation();\n  };\n  const saveTask = () => {\n    dispatch({ type: ADD_TASK, payload: { task: { title, time, day } } });\n  };\n  const handleEnter = (ev: any) => {\n    ev.key === \"Enter\" && saveTask();\n  };\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"modal\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <ModalContainer\n        className=\"box\"\n        style={{\n          left: dayIndex < 3 ? \"100px\" : \"-240px\",\n          position: \"absolute\"\n        }}\n        onClick={stopPropagation}\n      >\n        <TaskName>\n          <h4>{title}</h4>\n          <Button ariaLabel=\"close\" onClick={toggleModal}>\n            <CloseIcon />\n          </Button>\n        </TaskName>\n        <p>{new Date(day.timeStamp).toDateString()}</p>\n        <Input\n          label=\"Add title\"\n          placeholder=\"Do important stuff\"\n          type=\"text\"\n          handleChange={setTitle}\n          value={title}\n          handleEnter={handleEnter}\n        />\n        <Button\n          ariaLabel=\"Add an hour\"\n          onClick={() => setShowTimePicker(!showTimePicker)}\n        >\n          Add an hour\n        </Button>\n        {showTimePicker && <TimePicker date={time} handleChange={setTime} />}\n        <div>\n          <Button ariaLabel=\"Save button\" onClick={saveTask}>\n            Save\n          </Button>\n          <Button\n            ariaLabel=\"Cancel button\"\n            type=\"is-light\"\n            onClick={toggleModal}\n          >\n            cancel\n          </Button>\n        </div>\n      </ModalContainer>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Task as TaskI } from \"../../interfaces\";\nconst uuidv1 = require(\"uuid/v1\");\nconst Task = styled.li`\n  list-style-type: none;\n  border-radius: 6px;\n  color: white;\n  padding: 0.5em;\n`;\nconst Container = styled.ul`\n  position: absolute;\n  padding: 0.5em;\n  margin: 0;\n  top: 0;\n  width: 100%;\n  display: contents;\n`;\nconst TaskList = (props: { tasks: TaskI[]; mini: boolean }) => {\n  const { tasks, mini } = props;\n  return (\n    <Container>\n      {!mini &&\n        tasks.map(task => (\n          <Task className=\"tag is-link\" key={uuidv1()}>\n            {task.title}\n          </Task>\n        ))}\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport { Day, Action, CalendarState } from \"../../interfaces\";\nimport Modal from \"../page/Modal\";\nimport { handleEnterPress } from \"../../utils/a11y\";\nimport TaskList from \"./TaskList\";\nimport styled from \"styled-components\";\nimport { backgroundColor, textColor } from \"../../theme\";\nimport { SET_SELECTED_DAY, TOGGLE_MODAL } from \"../../reducer/actions\";\n\nconst DayBoxContainer = styled.div`\n  position: relative;\n  margin: 0 !important;\n  width: 100%;\n  background-color: ${backgroundColor} !important;\n  color: ${textColor} !important;\n  outline: none;\n  @media (max-width: 768px) {\n    padding: 0.5rem !important;\n  }\n`;\n\nconst DayContent = styled.div`\n  color: ${textColor};\n`;\nconst DateContainer = styled.p`\n  color: ${({ today, selectedDay }: { today: boolean; selectedDay: boolean }) =>\n    today ? \"white\" : selectedDay ? \"#185abc\" : textColor};\n  background-color: ${({\n    today,\n    selectedDay\n  }: {\n    today: boolean;\n    selectedDay: boolean;\n  }) => (today ? \"#1967d2\" : selectedDay ? \"#aecbfa\" : backgroundColor)};\n  margin: 0 !important;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n`;\nconst DayBox = (props: {\n  weekDay?: string;\n  day: Day;\n  index: number;\n  mini: boolean;\n  state: CalendarState;\n  dispatch?: React.Dispatch<Action>;\n}) => {\n  const {\n    day: { timeStamp, disabled },\n    day,\n    index,\n    mini,\n    dispatch,\n    state: { currentDayId, tasks, selectedDayMini }\n  } = props;\n  const tabIndex = disabled ? {} : { tabIndex: 0 };\n  const todayTasks = tasks.filter(\n    ({ day }: { day: Day }) => day.timeStamp === timeStamp\n  );\n  const todayTimeStamp: number = new Date().setHours(0, 0, 0, 0);\n  const toggleModal = (ev: any) => {\n    if (!disabled && dispatch && mini) {\n      dispatch({ type: SET_SELECTED_DAY, payload: { dayId: timeStamp } });\n    }\n    if (!disabled && dispatch && !mini) {\n      dispatch({ type: TOGGLE_MODAL, payload: { dayId: timeStamp } });\n    }\n  };\n  return (\n    <DayBoxContainer\n      className={mini ? \"\" : \"box\"}\n      onClick={toggleModal}\n      onKeyPress={ev => handleEnterPress(ev, toggleModal)}\n      aria-disabled={disabled}\n      {...tabIndex}\n    >\n      {!disabled && !mini && currentDayId === timeStamp && (\n        <Modal dayIndex={index} day={day} dispatch={dispatch} />\n      )}\n      <article className=\"media\">\n        <div className=\"media-content\">\n          <DayContent className=\"content\">\n            <DateContainer\n              today={day.timeStamp === todayTimeStamp}\n              selectedDay={selectedDayMini === day.timeStamp}\n              aria-label={!disabled ? new Date(timeStamp).toDateString() : \"\"}\n              className={mini ? \"hover-date\" : \"\"}\n            >\n              {disabled ? timeStamp : new Date(timeStamp).getDate()}\n            </DateContainer>\n            <TaskList tasks={todayTasks} mini={mini} />\n          </DayContent>\n        </div>\n      </article>\n    </DayBoxContainer>\n  );\n};\n\nexport default DayBox;\n","import React from \"react\";\nimport DayBox from \"./DayBox\";\nimport { Day } from \"../../interfaces\";\nimport { calendarContext } from \"../../context\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst Week = (props: { days: Day[]; mini: boolean }) => {\n  const { days, mini } = props;\n\n  return (\n    <calendarContext.Consumer>\n      {({ dispatch, state }) => (\n        <div style={{ display: \"flex\" }}>\n          {days.map((day: Day, index: number) => {\n            return (\n              <DayBox\n                day={day}\n                key={uuidv1()}\n                index={index}\n                mini={mini}\n                state={state}\n                dispatch={dispatch}\n              />\n            );\n          })}\n        </div>\n      )}\n    </calendarContext.Consumer>\n  );\n};\n\nexport default Week;\n","import React from \"react\";\nimport { getDaysOnMonth } from \"../../utils/dates\";\nimport { chunkArray } from \"../../utils/arrays\";\nimport Week from \"./Week\";\nimport { Day, CalendarState } from \"../../interfaces\";\nimport styled from \"styled-components\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport \"../animations/styles.css\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst MonthContainer = styled.div`\n  justify-content: space-arround;\n  margin: 1em;\n  width: 100%;\n  @media (max-width: 768px) {\n    margin: 0;\n  }\n`;\nconst Month = (props: {\n  mini: boolean;\n  currentDate: number;\n  state?: CalendarState;\n}) => {\n  const { currentDate, mini } = props;\n  const monthDays: Day[] = getDaysOnMonth(new Date(currentDate));\n  const [{ timeStamp: firstDay }] = monthDays.slice(0, 1);\n  const [{ timeStamp: lastDay }] = monthDays.slice(-1);\n  const firstBlanks = Array(new Date(firstDay).getDay()).fill({\n    value: \"x\",\n    disabled: true\n  });\n  const LastBlanks = Array(6 - new Date(lastDay).getDay()).fill({\n    value: \"x\",\n    disabled: true\n  });\n  const blankFilledWeeks: Day[][] = chunkArray(\n    [...firstBlanks, ...monthDays, ...LastBlanks],\n    7\n  );\n\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"example\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <MonthContainer>\n        {blankFilledWeeks.map((weekDays: Day[]) => (\n          <Week days={weekDays} key={uuidv1()} mini={mini} />\n        ))}\n      </MonthContainer>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nexport default Month;\n","import { Day } from \"../interfaces\";\nexport const getDaysOnMonth = (date: Date): Day[] => {\n  const year = date.getFullYear();\n  const monthNumnber = date.getMonth();\n  let currentDate = new Date(year, monthNumnber);\n  const month: number = currentDate.getMonth();\n  const lastMonthDay = new Date(year, month + 1, 0).getDate();\n  const days: Day[] = Array(lastMonthDay)\n    .fill(1)\n    .map((e, index: number) => {\n      const timeStamp: number = new Date(year, month, index + 1).getTime();\n      return {\n        timeStamp,\n        disabled: false\n      };\n    });\n  return days;\n};\n","import React from \"react\";\nconst uuidv1 = require(\"uuid/v1\");\nconst container = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  width: \"100%\"\n};\n\nconst WeekHeader = (props: { mini?: boolean }) => {\n  const { mini } = props;\n  const weekDays: string[] = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <div style={container}>\n      {weekDays.map((day: string) => (\n        <div key={uuidv1()}>{mini ? day[0] : day}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default WeekHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Month from \"./Month\";\nimport { chunkArray } from \"../../utils/arrays\";\nimport WeekHeader from \"./WeekHeader\";\nimport { CalendarState } from \"../../interfaces\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst FourMonths = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\nconst MonthTitle = styled.p`\n  width: 100%;\n  padding-left: 1.5em;\n`;\n\nconst MonthCalendar = styled.div`\n  width: 320px;\n`;\n\ninterface YearProps {\n  year: number;\n  state: CalendarState;\n}\n\nconst Year = (props: YearProps) => {\n  const { year, state } = props;\n  const monthDates: Date[] = Array(12)\n    .fill(1)\n    .map((e, monthNumber: number) => new Date(year, monthNumber));\n  const fourMonthOneElem: Date[][] = chunkArray(monthDates, 4);\n  return (\n    <div style={{ zoom: 0.8 }}>\n      {fourMonthOneElem.map(months => {\n        return (\n          <FourMonths key={uuidv1()}>\n            {months.map(date => (\n              <MonthCalendar key={uuidv1()}>\n                <MonthTitle>{date.toDateString().split(\" \")[1]}</MonthTitle>\n                <WeekHeader mini={true} />\n                <Month currentDate={date.getTime()} mini={true} state={state} />\n              </MonthCalendar>\n            ))}\n          </FourMonths>\n        );\n      })}\n    </div>\n  );\n};\n\nconst isSameYear = (prevProps: YearProps, nextProps: YearProps) =>\n  prevProps.year === nextProps.year;\nexport default React.memo(Year, isSameYear);\n","import React from \"react\";\nimport Month from \"./Month\";\nimport WeekHeader from \"./WeekHeader\";\nimport { calendarContext } from \"../../context\";\nimport Year from \"./Year\";\nimport styled from \"styled-components\";\n\nconst CalendarContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  flex-direction: column;\n  justify-content: flex-end;\n  height: 100%;\n`;\nconst Calendar = () => {\n  return (\n    <calendarContext.Consumer>\n      {({ state }: any) => {\n        const currentDate = state.currentDate;\n        return (\n          <CalendarContainer>\n            {state.calendarMode === \"Month\" ? (\n              <React.Fragment>\n                <WeekHeader />\n                <Month currentDate={currentDate} mini={false} state={state} />\n              </React.Fragment>\n            ) : (\n              <Year\n                year={new Date(state.currentDate).getFullYear()}\n                state={state}\n              />\n            )}\n          </CalendarContainer>\n        );\n      }}\n    </calendarContext.Consumer>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport { Button } from \"../elements\";\nimport { NavigateNext } from \"styled-icons/material/NavigateNext\";\nimport { NavigateBefore } from \"styled-icons/material/NavigateBefore\";\nimport styled, { withTheme } from \"styled-components\";\nimport { textColor } from \"../../theme\";\nimport { Action, CalendarState } from \"../../interfaces\";\nimport {\n  PREV_YEAR,\n  PREV_MONTH,\n  NEXT_YEAR,\n  NEXT_MONTH\n} from \"../../reducer/actions\";\n\nconst MonthSelectorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  button {\n    background-color: transparent !important;\n  }\n  svg {\n    color: ${textColor};\n  }\n  .btn--link {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn--link:hover {\n    background-color: rgba(119, 136, 153, 0.2);\n  }\n`;\n\nconst SelectedMonthContainer = styled.div`\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst NavigateNextIcon = styled(NavigateNext)`\n  height: 30px;\n  font-weight: bold;\n`;\n\nconst NavigateBeforeIcon = styled(NavigateBefore)`\n  height: 30px;\n  font-weight: bold;\n`;\n\nconst MonthSelector = (props: {\n  mini?: boolean;\n  onlyYear?: boolean;\n  theme?: { mode: string };\n  dispatch?: React.Dispatch<Action>;\n  state: CalendarState;\n}) => {\n  const { mini, onlyYear, dispatch, state } = props;\n  const currentDate = mini ? state.currentDateMin : state.currentDate;\n  const stringDateArr: string[] = new Date(currentDate)\n    .toDateString()\n    .split(\" \");\n  const month = stringDateArr[1];\n  const year = stringDateArr[3];\n  const previusDate = onlyYear ? PREV_YEAR : PREV_MONTH;\n  const nextDate = onlyYear ? NEXT_YEAR : NEXT_MONTH;\n\n  return (\n    <MonthSelectorContainer style={{ zoom: mini ? 0.7 : 1 }}>\n      <Button\n        ariaLabel=\"Previus month\"\n        size={50}\n        onClick={() =>\n          dispatch && dispatch({ type: previusDate, payload: { mini } })\n        }\n      >\n        <NavigateBeforeIcon />\n      </Button>\n      <Button\n        size={50}\n        ariaLabel=\"Next month\"\n        onClick={() =>\n          dispatch && dispatch({ type: nextDate, payload: { mini } })\n        }\n      >\n        <NavigateNextIcon />\n      </Button>\n      <SelectedMonthContainer arial-label=\"testing\" tabIndex={0}>\n        {`${onlyYear ? \"\" : month + \" - \"}${year}`}\n      </SelectedMonthContainer>\n    </MonthSelectorContainer>\n  );\n};\n\nexport default withTheme(MonthSelector);\n","import React from \"react\";\nimport WeekHeader from \"./WeekHeader\";\nimport MonthSelector from \"./MonthSelector\";\nimport Month from \"./Month\";\nimport { calendarContext } from \"../../context\";\nimport styled from \"styled-components\";\n\nconst MiniCalendarContainer = styled.div`\n  min-width: 300px;\n  zoom: 0.8;\n`;\n\nconst MiniCalendar = () => {\n  return (\n    <MiniCalendarContainer>\n      <calendarContext.Consumer>\n        {({ state, dispatch }) => (\n          <React.Fragment>\n            <MonthSelector mini={true} dispatch={dispatch} state={state} />\n            <WeekHeader mini={true} />\n            <Month\n              mini={true}\n              currentDate={state.currentDateMin}\n              state={state}\n            />\n          </React.Fragment>\n        )}\n      </calendarContext.Consumer>\n    </MiniCalendarContainer>\n  );\n};\n\nexport default MiniCalendar;\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { backgroundColor, textColor } from \"./theme\";\n\nconst ThemeToggleContext: any = React.createContext(\"\");\n\nexport const useTheme = () => React.useContext(ThemeToggleContext);\n\nexport const MyThemeProvider = ({ children }: { children: any }) => {\n  const [themeState, setThemeState] = React.useState({\n    mode: localStorage.getItem(\"theme\") || \"light\"\n  });\n\n  const Wrapper = styled.div`\n    background-color: ${backgroundColor};\n    color: ${textColor};\n  `;\n  const toggle = () => {\n    const mode = themeState.mode === \"light\" ? \"dark\" : \"light\";\n    setThemeState({ mode });\n    localStorage.setItem(\"theme\", mode);\n  };\n\n  return (\n    <ThemeToggleContext.Provider value={{ toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: themeState.mode\n        }}\n      >\n        <Wrapper>{children}</Wrapper>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { Dispatch } from \"react\";\nimport { Select, Button } from \"../elements\";\nimport { MonthSelector } from \"../calendar\";\nimport styled, { withTheme } from \"styled-components\";\nimport { CalendarAlt } from \"styled-icons/fa-solid/CalendarAlt\";\nimport { backgroundColor, textColor, oppositeBlue } from \"../../theme\";\nimport { useTheme } from \"../../ThemeContext\";\nimport { CalendarState, Action } from \"../../interfaces\";\nimport { CHANGE_CALENDAR_MODE } from \"../../reducer/actions\";\n\nconst CalendarIcon = styled(CalendarAlt)`\n  height: 40px;\n  color: #3866d0;\n  margin-right: 0.5em;\n  @media (max-width: 768px) {\n    margin-right: 0;\n  }\n`;\nconst HeaderTitle = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-family: sans-serif;\n  color: ${textColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nconst NavBar = styled.nav`\n  border-bottom: 0.5px solid ${textColor};\n  margin-bottom: \"1em\";\n  background-color: ${backgroundColor} !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: center;\n  padding-left: 0.5em;\n  max-height: 55px;\n  @media (max-width: 768px) {\n    padding-left: 0;\n    .button {\n      padding: 0;\n    }\n    .navbar-item {\n      padding: 0.3em;\n    }\n  }\n`;\nconst Sky = styled.div`\n  background-color: ${oppositeBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  max-height: 40px;\n  max-width: 40px;\n`;\nconst Header = (props: {\n  state: CalendarState;\n  dispatch?: Dispatch<Action>;\n  theme: { mode: string };\n}) => {\n  const { dispatch, state } = props;\n  const themeToggle: any = useTheme();\n  const calendarMode = state.calendarMode;\n  const handleChange = (calendarMode: string) => {\n    dispatch &&\n      dispatch({ type: CHANGE_CALENDAR_MODE, payload: { calendarMode } });\n  };\n  return (\n    <NavBar className=\"navbar\">\n      <div className=\"navbar-brand\">\n        <HeaderTitle>\n          <CalendarIcon />\n          <Title>Calendar</Title>\n        </HeaderTitle>\n      </div>\n\n      <MonthSelector\n        onlyYear={calendarMode === \"Year\"}\n        mini={false}\n        dispatch={dispatch}\n        state={state}\n      />\n      <Sky>\n        <Button\n          ariaLabel=\"night mode\"\n          onClick={() => themeToggle.toggle()}\n          bg=\"transparent\"\n        >\n          {props.theme.mode === \"dark\" ? \"🌝\" : \"🌚\"}\n        </Button>\n      </Sky>\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <Select\n            defaultValue={calendarMode || \"Month\"}\n            options={[\"Month\", \"Year\"]}\n            handleChange={handleChange}\n          />\n        </div>\n      </div>\n    </NavBar>\n  );\n};\nexport default withTheme(Header);\n","import React, { useContext, useReducer } from \"react\";\nimport { calendarContext } from \"./context\";\nimport { calendarReducer } from \"./reducer/reducer\";\nimport { Header } from \"./components/page\";\nimport { Calendar, MiniCalendar } from \"./components/calendar\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: 0.5em;\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  overflow: hidden;\n`;\n\nconst App: React.FC = () => {\n  const { state } = useContext(calendarContext);\n  const [monthSelectorState, monthSelectorDispatcher] = useReducer(\n    calendarReducer,\n    state\n  );\n\n  return (\n    <AppContainer>\n      <calendarContext.Provider\n        value={{\n          state: monthSelectorState,\n          dispatch: monthSelectorDispatcher\n        }}\n      >\n        <calendarContext.Consumer>\n          {({ dispatch, state }) => (\n            <Header state={state} dispatch={dispatch} />\n          )}\n        </calendarContext.Consumer>\n        <div>\n          <Container>\n            <LeftSide className=\"is-hidden-mobile\">\n              <MiniCalendar />\n            </LeftSide>\n            <Calendar />\n          </Container>\n        </div>\n      </calendarContext.Provider>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MyThemeProvider } from \"./ThemeContext\";\n\nReactDOM.render(\n  <MyThemeProvider>\n    <App />\n  </MyThemeProvider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}