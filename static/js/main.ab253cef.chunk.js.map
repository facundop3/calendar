{"version":3,"sources":["context.ts","reducer.ts","utils/a11y.ts","theme.ts","components/Select.tsx","components/Button.tsx","components/MonthSelector.tsx","ThemeContext.tsx","components/Header.tsx","utils/arrays.ts","components/Input.tsx","components/TimePicker.tsx","components/Modal.tsx","components/TaskList.tsx","components/DayBox.tsx","components/Week.tsx","components/Month.tsx","utils/dates.ts","components/WeekHeader.tsx","components/Year.tsx","components/Calendar.tsx","components/MiniCalendar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["monthSelector","state","localStorage","getItem","JSON","parse","currentDate","Date","getTime","currentDayId","calendarMode","tasks","miniCalendarState","yearCalendarState","monthSelectorContext","React","createContext","miniCalendarContext","yearCalendarContext","calendarReducer","action","type","newState","Object","objectSpread","payload","setItem","stringify","_action$payload$task","task","title","time","day","concat","toConsumableArray","dayId","getMonth","year","getFullYear","handleEnterPress","ev","callback","key","backgroundColor","theme","light","dark","textColor","hoverColor","oppositeBlue","uuidv1","require","SelectedOption","styled","a","_templateObject","OptionList","div","_templateObject2","OptionItem","_templateObject3","Select","props","defaultValue","options","handleChange","_useState","useState","_useState2","slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selected","setSelected","handleSelect","target","innerText","useEffect","handleClick","react_default","createElement","className","onClick","tabIndex","onKeyPress","map","option","Btn","button","Button_templateObject","_ref","size","_ref2","_ref3","_ref4","bg","Button","ariaLabel","children","_props$type","otherProps","objectWithoutProperties","assign","aria-label","stopPropagation","MonthSelectorContainer","MonthSelector_templateObject","SelectedMonthContainer","MonthSelector_templateObject2","NavigateNextIcon","NavigateNext","MonthSelector_templateObject3","NavigateBeforeIcon","NavigateBefore","_templateObject4","withTheme","mini","onlyYear","calendarContext","context","_useContext","useContext","dispatch","stringDateArr","toDateString","split","month","style","zoom","components_Button","arial-label","ThemeToggleContext","ThemeProvider","CalendarIcon","CalendarAlt","Header_templateObject","HeaderTitle","Header_templateObject2","Title","h2","Header_templateObject3","NavBar","nav","Header_templateObject4","Sky","_templateObject5","themeToggle","components_MonthSelector","toggle","mode","components_Select","chunkArray","myArray","chunk_size","index","arrayLength","length","tempArray","myChunk","slice","push","InputContainer","label","Input_templateObject","InputDescription","small","Input_templateObject2","Input","placeholder","required","value","aria-required","focus","onChange","TimePickerContainer","TimePicker_templateObject","TimePickerValue","TimePicker_templateObject2","ControlsContainer","TimePicker_templateObject3","PlusIcon","Plus","TimePicker_templateObject4","MinusIcon","Minus","TimePicker_templateObject5","TimePicker","date","currentTime","setCurrentTime","_currentTime$toTimeSt","toTimeString","_currentTime$toTimeSt2","hours","minutes","changeMinutes","sign","fiveMinutesInMiliseconds","CloseIcon","Close","Modal_templateObject","ModalContainer","Modal_templateObject2","TaskName","Modal_templateObject3","Modal","dayIndex","showTimePicker","setShowTimePicker","setTime","_useState5","_useState6","setTitle","toggleModal","console","log","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","left","position","timeStamp","components_Input","components_TimePicker","Task","li","TaskList_templateObject","Container","ul","TaskList_templateObject2","TaskList","DayBoxContainer","DayBox_templateObject","DayContent","DayBox_templateObject2","DayBox","_props$day","disabled","_props$state","todayTasks","filter","aria-disabled","components_Modal","getDate","components_TaskList","Week","days","display","components_DayBox","MonthContainer","Month_templateObject","Month","monthDays","monthNumnber","lastMonthDay","Array","fill","e","getDaysOnMonth","_monthDays$slice","firstDay","_monthDays$slice3","lastDay","firstBlanks","getDay","LastBlanks","blankFilledWeeks","weekDays","components_Week","container","justifyContent","alignItems","width","WeekHeader","FourMonths","Year_templateObject","MonthTitle","p","Year_templateObject2","MonthCalendar","Year_templateObject3","Year","initialState","_useReducer","useReducer","_useReducer2","monthDates","monthNumber","fourMonthOneElem","Provider","months","components_WeekHeader","components_Month","CalendarContainer","Calendar_templateObject","Calendar","Consumer","Fragment","components_Year","MiniCalendarContainer","MiniCalendar_templateObject","MiniCalendar","MiniCalendarState","App_templateObject","LeftSide","App_templateObject2","AppContainer","App_templateObject3","App","monthSelectorState","monthSelectorDispatcher","components_Header","App_Container","components_MiniCalendar","components_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","_React$useState","_React$useState2","themeState","setThemeState","Wrapper","ThemeContext_templateObject","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab253cef.chunk.js","sourcesContent":["import React, { Dispatch } from \"react\";\nimport { calendarState, action } from \"./interfaces\";\n\nconst monthSelector: { state: calendarState; dispatch?: Dispatch<action> } = {\n  state: localStorage.getItem(\"monthSelector\")\n    ? JSON.parse(\n        localStorage.getItem(\"monthSelector\") || \"{calalendarMode:'Month'}\"\n      )\n    : {\n        currentDate: new Date().getTime(),\n        currentDayId: 0,\n        calendarMode: \"\",\n        tasks: []\n      }\n};\n\nconst miniCalendarState: {\n  state: calendarState;\n  dispatch?: Dispatch<action>;\n} = {\n  state: {\n    currentDate: new Date().getTime(),\n    currentDayId: 0,\n    calendarMode: \"\",\n    tasks: []\n  }\n};\n\nconst yearCalendarState: {\n  state: calendarState;\n  dispatch?: Dispatch<action>;\n} = {\n  state: {\n    currentDate: new Date().getTime(),\n    currentDayId: 0,\n    calendarMode: \"\",\n    tasks: []\n  }\n};\n\nexport const monthSelectorContext = React.createContext(monthSelector);\nexport const miniCalendarContext = React.createContext(miniCalendarState);\nexport const yearCalendarContext = React.createContext(yearCalendarState);\n","import { calendarState, action as actionI } from \"./interfaces\";\n\nexport const calendarReducer = (\n  state: calendarState,\n  action: actionI\n): calendarState => {\n  switch (action.type) {\n    case \"CHANGE_CALENDAR_MODE\":\n      return (() => {\n        const newState = {\n          ...state,\n          calendarMode: action.payload.calendarMode\n        };\n        localStorage.setItem(\n          \"monthSelector\",\n          JSON.stringify({\n            ...newState,\n            currentDate: newState.currentDate\n          })\n        );\n        return newState;\n      })();\n\n    case \"ADD_TASK\":\n      return (() => {\n        const { title, time, day } = action.payload.task;\n        const newState = {\n          ...state,\n          tasks: [...state.tasks, { title, time, day }],\n          currentDayId: 0\n        };\n        localStorage.setItem(\"monthSelector\", JSON.stringify(newState));\n        return newState;\n      })();\n\n    case \"TOGGLE_MODAL\":\n      return (() => {\n        const newState = {\n          ...state,\n          currentDayId: action.payload.dayId\n        };\n        localStorage.setItem(\"modal\", JSON.stringify(newState));\n\n        return newState;\n      })();\n    case \"NEXT_MONTH\":\n      return (() => {\n        let newState: any;\n        if (new Date(state.currentDate).getMonth() === 11) {\n          const year = new Date(state.currentDate).getFullYear() + 1;\n          newState = {\n            ...state,\n            currentDate: new Date(year, 0)\n          };\n        } else {\n          newState = {\n            ...state,\n            currentDate: new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() + 1\n            )\n          };\n        }\n        localStorage.setItem(\"nextMonth\", JSON.stringify(newState));\n        return newState;\n      })();\n    case \"PREV_MONTH\":\n      return (() => {\n        let newState: any;\n        if (new Date(state.currentDate).getMonth() === 0) {\n          newState = {\n            ...state,\n            currentDate: new Date(\n              new Date(state.currentDate).getFullYear() - 1,\n              11\n            )\n          };\n        } else {\n          newState = {\n            ...state,\n            currentDate: new Date(\n              new Date(state.currentDate).getFullYear(),\n              new Date(state.currentDate).getMonth() - 1\n            )\n          };\n        }\n        localStorage.setItem(\"prevMonth\", JSON.stringify(newState));\n        return newState;\n      })();\n    case \"PREV_YEAR\":\n      return (() => {\n        const newState = {\n          ...state,\n          currentDate: new Date(\n            new Date(state.currentDate).getFullYear() - 1,\n            new Date(state.currentDate).getMonth()\n          ).getTime()\n        };\n        localStorage.setItem(\"prevYear\", JSON.stringify(newState));\n        return newState;\n      })();\n    case \"NEXT_YEAR\":\n      return (() => {\n        const newState = {\n          ...state,\n          currentDate: new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            new Date(state.currentDate).getMonth()\n          ).getTime()\n        };\n        localStorage.setItem(\"newxtYear\", JSON.stringify(newState));\n        return newState;\n      })();\n    default:\n      return state;\n  }\n};\n","export const handleEnterPress = (ev: any, callback: (e: any) => any) => {\n  if (ev.key === \"Enter\") {\n    return callback(ev);\n  }\n};\n","import theme from \"styled-theming\";\n\nexport const backgroundColor = theme(\"mode\", {\n  light: \"#fafafa\",\n  dark: \"#222\"\n});\n\nexport const textColor = theme(\"mode\", {\n  light: \"#000\",\n  dark: \"#fff\"\n});\n\nexport const hoverColor = theme(\"mode\", {\n  light: \"#fafafa\",\n  dark: \"grey\"\n});\n\nexport const oppositeBlue = theme(\"mode\", {\n  light: \"#191970\",\n  dark: \"#0094d5\"\n});\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { handleEnterPress } from \"../utils/a11y\";\nimport { textColor, hoverColor, backgroundColor } from \"../theme\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst SelectedOption = styled.a`\n  color: ${textColor} !important;\n  border-radius: 4px;\n  &:hover {\n    background-color: ${hoverColor} !important;\n  }\n  &:focus {\n    background-color: ${hoverColor} !important;\n  }\n  &:focus-within {\n    background-color: ${hoverColor} !important;\n  }\n`;\n\nconst OptionList = styled.div`\n  background-color: ${hoverColor} !important;\n`;\nconst OptionItem = styled.a`\n  color: ${textColor} !important;\n  &:hover {\n    background-color: ${backgroundColor} !important;\n  }\n`;\nconst Select = (props: {\n  options: string[];\n  defaultValue: string;\n  handleChange?: (p: string) => any;\n}) => {\n  const { defaultValue, options, handleChange } = props;\n  const [showOptions, setShowOptions] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(defaultValue);\n  const handleSelect = (ev: any) => {\n    setSelected(ev.target.innerText);\n  };\n  useEffect(() => {\n    handleChange && handleChange(selected);\n  }, [selected]);\n  const handleClick = () => setShowOptions(!showOptions);\n  return (\n    <div\n      className=\"navbar-item has-dropdown is-hoverable\"\n      onClick={() => handleClick()}\n      tabIndex={0}\n      onKeyPress={ev => handleEnterPress(ev, handleClick)}\n    >\n      <SelectedOption className=\"navbar-link\">{selected}</SelectedOption>\n      <OptionList className=\"navbar-dropdown\">\n        {options.map(option => (\n          <OptionItem\n            className=\"navbar-item\"\n            key={uuidv1()}\n            onClick={handleSelect}\n            onKeyPress={ev => handleEnterPress(ev, handleSelect)}\n            tabIndex={0}\n          >\n            {option}\n          </OptionItem>\n        ))}\n      </OptionList>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Btn = styled.button`\n  width: ${({ size }: { size?: number }) => size}px;\n  height: ${({ size }: { size?: number }) => size}px;\n  border-radius: ${({ size }: { size?: number }) => (size ? \"50%\" : \"\")};\n  margin: 0.25em;\n  background-color: ${({ bg }: any) => bg} !important;\n`;\n\nconst Button = (props: {\n  children: any;\n  ariaLabel: string;\n  type?: string;\n  style?: {};\n  size?: number;\n  transparent?: boolean;\n  bg?: string;\n  onClick?: (ev: any) => any;\n}) => {\n  const {\n    ariaLabel,\n    children,\n    type = \"is-link\",\n    onClick,\n    size,\n    ...otherProps\n  } = props;\n  const stopPropagation = (ev: any) => {\n    ev.stopPropagation();\n    onClick && onClick(ev);\n  };\n  return (\n    <Btn\n      bg={props.bg}\n      aria-label={ariaLabel}\n      className={`button ${type}`}\n      onClick={stopPropagation}\n      {...otherProps}\n    >\n      {children}\n    </Btn>\n  );\n};\n\nexport default Button;\n","import React, { useContext } from \"react\";\nimport Button from \"./Button\";\nimport { NavigateNext } from \"styled-icons/material/NavigateNext\";\nimport { NavigateBefore } from \"styled-icons/material/NavigateBefore\";\nimport styled, { withTheme } from \"styled-components\";\nimport { textColor } from \"../theme\";\n\nconst MonthSelectorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  button {\n    background-color: transparent !important;\n  }\n  svg {\n    color: ${textColor};\n  }\n  .btn--link {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn--link:hover {\n    background-color: rgba(119, 136, 153, 0.2);\n  }\n`;\n\nconst SelectedMonthContainer = styled.div`\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst NavigateNextIcon = styled(NavigateNext)`\n  height: 30px;\n  font-weight: bold;\n`;\n\nconst NavigateBeforeIcon = styled(NavigateBefore)`\n  height: 30px;\n  font-weight: bold;\n`;\n\nconst MonthSelector = (props: {\n  mini?: boolean;\n  context: any;\n  onlyYear?: boolean;\n  theme?: { mode: string };\n}) => {\n  const { mini, onlyYear } = props;\n  const calendarContext = props.context;\n  const { state, dispatch } = useContext(calendarContext);\n  const { currentDate } = state;\n  const stringDateArr: string[] = new Date(currentDate)\n    .toDateString()\n    .split(\" \");\n  const month = stringDateArr[1];\n  const year = stringDateArr[3];\n\n  return (\n    <MonthSelectorContainer style={{ zoom: mini ? 0.7 : 1 }}>\n      <Button\n        ariaLabel=\"Previus month\"\n        size={50}\n        onClick={() =>\n          dispatch({ type: onlyYear ? \"PREV_YEAR\" : \"PREV_MONTH\" })\n        }\n      >\n        <NavigateBeforeIcon />\n      </Button>\n      <Button\n        size={50}\n        ariaLabel=\"Next month\"\n        onClick={() =>\n          dispatch({ type: onlyYear ? \"NEXT_YEAR\" : \"NEXT_MONTH\" })\n        }\n      >\n        <NavigateNextIcon />\n      </Button>\n      <SelectedMonthContainer arial-label=\"testing\" tabIndex={0}>\n        {`${onlyYear ? \"\" : month + \" - \"}${year}`}\n      </SelectedMonthContainer>\n    </MonthSelectorContainer>\n  );\n};\n\nexport default withTheme(MonthSelector);\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { backgroundColor, textColor } from \"./theme\";\n\nconst ThemeToggleContext: any = React.createContext(\"\");\n\nexport const useTheme = () => React.useContext(ThemeToggleContext);\n\nexport const MyThemeProvider = ({ children }: { children: any }) => {\n  const [themeState, setThemeState] = React.useState({\n    mode: localStorage.getItem(\"theme\") || \"light\"\n  });\n\n  const Wrapper = styled.div`\n    background-color: ${backgroundColor};\n    color: ${textColor};\n  `;\n  const toggle = () => {\n    const mode = themeState.mode === \"light\" ? \"dark\" : \"light\";\n    setThemeState({ mode });\n    localStorage.setItem(\"theme\", mode);\n  };\n\n  return (\n    <ThemeToggleContext.Provider value={{ toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: themeState.mode\n        }}\n      >\n        <Wrapper>{children}</Wrapper>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { useContext } from \"react\";\nimport Select from \"./Select\";\nimport { monthSelectorContext } from \"../context\";\nimport MonthSelector from \"./MonthSelector\";\nimport styled, { withTheme } from \"styled-components\";\nimport { CalendarAlt } from \"styled-icons/fa-solid/CalendarAlt\";\nimport { backgroundColor, textColor, oppositeBlue } from \"../theme\";\nimport { useTheme } from \"../ThemeContext\";\nimport Button from \"./Button\";\n\nconst CalendarIcon = styled(CalendarAlt)`\n  height: 40px;\n  color: #3866d0;\n  margin-right: 0.5em;\n`;\nconst HeaderTitle = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-family: sans-serif;\n  color: ${textColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NavBar = styled.nav`\n  border-bottom: 0.5px solid ${textColor};\n  margin-bottom: \"1em\";\n  background-color: ${backgroundColor} !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: center;\n  padding-left: 0.5em;\n`;\nconst Sky = styled.div`\n  background-color: ${oppositeBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  max-height: 40px;\n  max-width: 40px;\n`;\nconst Header = (props: any) => {\n  const themeToggle: any = useTheme();\n  const { dispatch, state } = useContext(monthSelectorContext);\n  const calendarMode = state.calendarMode;\n  const handleChange = (calendarMode: string) => {\n    dispatch &&\n      dispatch({ type: \"CHANGE_CALENDAR_MODE\", payload: { calendarMode } });\n  };\n  return (\n    <NavBar className=\"navbar\">\n      <div className=\"navbar-brand\">\n        <HeaderTitle>\n          <CalendarIcon />\n          <Title>Calendar</Title>\n        </HeaderTitle>\n      </div>\n\n      <MonthSelector\n        context={monthSelectorContext}\n        onlyYear={calendarMode === \"Year\"}\n      />\n      <Sky>\n        <Button\n          ariaLabel=\"night mode\"\n          onClick={() => themeToggle.toggle()}\n          bg=\"transparent\"\n        >\n          {props.theme.mode === \"dark\" ? \"🌝\" : \"🌚\"}\n        </Button>\n      </Sky>\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <Select\n            defaultValue={calendarMode || \"Month\"}\n            options={[\"Month\", \"Year\"]}\n            handleChange={handleChange}\n          />\n        </div>\n      </div>\n    </NavBar>\n  );\n};\nexport default withTheme(Header);\n","/**\n * Returns an array with arrays of the given size.\n *\n * @param myArray {Array} array to split\n * @param chunk_size {Integer} Size of every group\n */\nexport const chunkArray = (\n  myArray: any[],\n  chunk_size: number\n): Array<Array<any>> => {\n  let index: number = 0;\n  let arrayLength: number = myArray.length;\n  let tempArray: any[][] = [];\n\n  for (index = 0; index < arrayLength; index += chunk_size) {\n    const myChunk = myArray.slice(index, index + chunk_size);\n    // Do something if you want with the group\n    tempArray.push(myChunk);\n  }\n\n  return tempArray;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nconst InputDescription = styled.small`\n  color: gray;\n`;\nconst Input = (props: {\n  label: string;\n  placeholder?: string;\n  type: string;\n  required?: boolean;\n  value?: string;\n  handleChange?: (ev: any) => any;\n}) => {\n  const handleInputClick = (ev: any) => {\n    ev.target.focus();\n  };\n  const { label, placeholder, type, required, value, handleChange } = props;\n  const onChange = (ev: any) => {\n    handleChange && handleChange(ev.target.value);\n  };\n  return (\n    <InputContainer>\n      <InputDescription>{label}</InputDescription>\n      <input\n        className=\"input\"\n        placeholder={placeholder}\n        type={type}\n        aria-required={required}\n        onClick={handleInputClick}\n        value={value}\n        onChange={onChange}\n      />\n    </InputContainer>\n  );\n};\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { Plus } from \"styled-icons/fa-solid/Plus\";\nimport { Minus } from \"styled-icons/typicons/Minus\";\n\nconst TimePickerContainer = styled.div`\n  display: flex;\n  max-width: 80px;\n`;\n\nconst TimePickerValue = styled.div`\n  padding: 0.5em;\n  display: flex;\n  p {\n    margin: 0;\n  }\n`;\nconst ControlsContainer = styled.div`\n  display: inline-grid;\n  zoom: 0.7;\n\n  button {\n    margin: 0;\n    padding: 4px 8px;\n  }\n`;\n\nconst PlusIcon = styled(Plus)`\n  height: 15px;\n`;\n\nconst MinusIcon = styled(Minus)`\n  height: 15px;\n`;\nconst TimePicker = (props: { date: Date; handleChange?: any }) => {\n  const { date, handleChange } = props;\n  const [currentTime, setCurrentTime] = useState<Date>(date);\n  const [hours, minutes] = currentTime.toTimeString().split(\":\");\n  const changeMinutes = (sign: number) => {\n    const fiveMinutesInMiliseconds = sign * 5 * 60000;\n    setCurrentTime(new Date(currentTime.getTime() + fiveMinutesInMiliseconds));\n  };\n  useEffect(() => {\n    handleChange && handleChange(currentTime);\n  }, [currentTime, handleChange]);\n  return (\n    <TimePickerContainer>\n      <TimePickerValue>\n        <p>\n          {hours}:{minutes}\n        </p>\n      </TimePickerValue>\n      <ControlsContainer>\n        <Button ariaLabel=\"Add 5 minutes\" onClick={() => changeMinutes(1)}>\n          <PlusIcon />\n        </Button>\n        <Button\n          ariaLabel=\"substract 5 minutes\"\n          onClick={() => changeMinutes(-1)}\n        >\n          <MinusIcon />\n        </Button>\n      </ControlsContainer>\n    </TimePickerContainer>\n  );\n};\n\nexport default TimePicker;\n","import React, { useState } from \"react\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport { day as iday } from \"../interfaces\";\nimport TimePicker from \"./TimePicker\";\nimport { Close } from \"styled-icons/material/Close\";\nimport styled from \"styled-components\";\nimport { textColor, backgroundColor, hoverColor } from \"../theme\";\nimport \"./styles/MountTransition.css\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nconst CloseIcon = styled(Close)`\n  height: 15px;\n  color: ${textColor};\n`;\nconst ModalContainer = styled.div`\n  min-height: 250px;\n  min-width: 200px;\n  position: absolute;\n  background-color: ${backgroundColor} !important;\n  color: ${textColor} !important;\n  z-index: 3;\n  border: 0.5px solid ${hoverColor} !important;\n`;\nconst TaskName = styled.div`\n  display: flex;\n  justify-content: space-between;\n  button {\n    background-color: transparent !important;\n  }\n`;\nconst Modal = (props: { dayIndex: number; day: iday; dispatch: any }) => {\n  const { dayIndex, day, dispatch } = props;\n\n  const [showTimePicker, setShowTimePicker] = useState<boolean>(false);\n  const [time, setTime] = useState<Date>(new Date());\n  const [title, setTitle] = useState<string>(\"\");\n  const toggleModal = () => {\n    console.log(\"Toggle modal\");\n    dispatch({ type: \"TOGGLE_MODAL\", payload: \"\" });\n  };\n  const stopPropagation = (ev: any) => {\n    ev.stopPropagation();\n  };\n  const saveTask = (ev: any) => {\n    console.log(\"save task\");\n    dispatch({ type: \"ADD_TASK\", payload: { task: { title, time, day } } });\n  };\n\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"modal\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <ModalContainer\n        className=\"box\"\n        style={{\n          left: dayIndex < 3 ? \"100px\" : \"-100px\",\n          position: \"absolute\"\n        }}\n        onClick={stopPropagation}\n      >\n        <TaskName>\n          <h4>{title}</h4>\n          <Button ariaLabel=\"close\" onClick={toggleModal}>\n            <CloseIcon />\n          </Button>\n        </TaskName>\n        <p>{new Date(day.timeStamp).toDateString()}</p>\n        <Input\n          label=\"Add title\"\n          placeholder=\"Do important stuff\"\n          type=\"text\"\n          handleChange={setTitle}\n          value={title}\n        />\n        <Button\n          ariaLabel=\"Add an hour\"\n          onClick={() => setShowTimePicker(!showTimePicker)}\n        >\n          Add an hour\n        </Button>\n        {showTimePicker && <TimePicker date={time} handleChange={setTime} />}\n        <div>\n          <Button ariaLabel=\"Save button\" onClick={saveTask}>\n            Save\n          </Button>\n          <Button\n            ariaLabel=\"Cancel button\"\n            type=\"is-light\"\n            onClick={toggleModal}\n          >\n            cancel\n          </Button>\n        </div>\n      </ModalContainer>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { task } from \"../interfaces\";\n\nconst Task = styled.li`\n  list-style-type: none;\n  border-radius: 6px;\n  color: white;\n  padding: 0.5em;\n`;\nconst Container = styled.ul`\n  position: absolute;\n  padding: 0.5em;\n  margin: 0;\n  top: 0;\n  width: 100%;\n  display: contents;\n`;\nconst TaskList = (props: { tasks: task[] }) => {\n  const { tasks } = props;\n  return (\n    <Container>\n      {tasks.map(task => (\n        <Task className=\"tag is-link\">{task.title}</Task>\n      ))}\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport { day as dayI } from \"../interfaces\";\nimport Modal from \"./Modal\";\nimport { handleEnterPress } from \"../utils/a11y\";\nimport TaskList from \"./TaskList\";\nimport styled from \"styled-components\";\nimport { backgroundColor, textColor, hoverColor } from \"../theme\";\n\nconst DayBoxContainer = styled.div`\n  position: relative;\n  margin: 0 !important;\n  width: 100%;\n  background-color: ${backgroundColor} !important;\n  color: ${textColor} !important;\n`;\n\nconst DayContent = styled.div`\n  color: ${textColor};\n`;\n\nconst DayBox = (props: {\n  weekDay?: string;\n  day: dayI;\n  index: number;\n  mini: boolean;\n  dispatch: any;\n  state: any;\n}) => {\n  const {\n    day: { timeStamp, disabled },\n    day,\n    index,\n    mini,\n    dispatch,\n    state: { currentDayId, tasks }\n  } = props;\n  const tabIndex = disabled ? {} : { tabIndex: 0 };\n  const todayTasks = tasks.filter(\n    ({ day }: { day: dayI }) => day.timeStamp === timeStamp\n  );\n  const toggleModal = (ev: any) => {\n    if (!disabled) {\n      dispatch({ type: \"TOGGLE_MODAL\", payload: { dayId: timeStamp } });\n    }\n  };\n  return (\n    <DayBoxContainer\n      className={mini ? \"\" : \"box\"}\n      onClick={toggleModal}\n      onKeyPress={ev => handleEnterPress(ev, toggleModal)}\n      aria-disabled={disabled}\n      {...tabIndex}\n    >\n      {!disabled && currentDayId === timeStamp && (\n        <Modal dayIndex={index} day={day} dispatch={dispatch} />\n      )}\n      <article className=\"media\">\n        <div className=\"media-content\">\n          <DayContent className=\"content\">\n            <p\n              aria-label={!disabled ? new Date(timeStamp).toDateString() : \"\"}\n              className={mini ? \"hover-date\" : \"\"}\n            >\n              {disabled ? timeStamp : new Date(timeStamp).getDate()}\n            </p>\n            <TaskList tasks={todayTasks} />\n          </DayContent>\n        </div>\n      </article>\n    </DayBoxContainer>\n  );\n};\n\nexport default DayBox;\n","import React from \"react\";\nimport DayBox from \"./DayBox\";\nimport { day } from \"../interfaces\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst Week = (props: {\n  days: day[];\n  mini: boolean;\n  dispatch: any;\n  state: any;\n}) => {\n  const { days, mini, dispatch, state } = props;\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      {days.map((day: day, index: number) => {\n        return (\n          <DayBox\n            day={day}\n            key={uuidv1()}\n            index={index}\n            mini={mini}\n            dispatch={dispatch}\n            state={state}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Week;\n","import React from \"react\";\nimport { getDaysOnMonth } from \"../utils/dates\";\nimport { chunkArray } from \"../utils/arrays\";\nimport Week from \"./Week\";\nimport { day } from \"../interfaces\";\nimport styled from \"styled-components\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport \"./styles/MountTransition.css\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst MonthContainer = styled.div`\n  justify-content: space-arround;\n  margin: 1em;\n  width: 100%;\n`;\nconst Month = (props: {\n  mini: boolean;\n  currentDate: number;\n  dispatch?: any;\n  state?: any;\n}) => {\n  const { currentDate, mini, dispatch, state } = props;\n  const monthDays: day[] = getDaysOnMonth(new Date(currentDate));\n  const [{ timeStamp: firstDay }] = monthDays.slice(0, 1);\n  const [{ timeStamp: lastDay }] = monthDays.slice(-1);\n  const firstBlanks = Array(new Date(firstDay).getDay()).fill({\n    value: \"x\",\n    disabled: true\n  });\n  const LastBlanks = Array(6 - new Date(lastDay).getDay()).fill({\n    value: \"x\",\n    disabled: true\n  });\n  const blankFilledWeeks: day[][] = chunkArray(\n    [...firstBlanks, ...monthDays, ...LastBlanks],\n    7\n  );\n\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"example\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <MonthContainer>\n        {blankFilledWeeks.map((weekDays: day[]) => (\n          <Week\n            days={weekDays}\n            key={uuidv1()}\n            mini={mini}\n            dispatch={dispatch}\n            state={state}\n          />\n        ))}\n      </MonthContainer>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nexport default Month;\n","import { day } from \"../interfaces\";\nexport const getDaysOnMonth = (date: Date): day[] => {\n  const year = date.getFullYear();\n  const monthNumnber = date.getMonth();\n  let currentDate = new Date(year, monthNumnber);\n  const month: number = currentDate.getMonth();\n  const lastMonthDay = new Date(year, month + 1, 0).getDate();\n  const days: day[] = Array(lastMonthDay)\n    .fill(1)\n    .map((e, index: number) => {\n      const timeStamp: number = new Date(year, month, index + 1).getTime();\n      return {\n        timeStamp,\n        disabled: false\n      };\n    });\n  return days;\n};\n","import React from \"react\";\nconst uuidv1 = require(\"uuid/v1\");\nconst container = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  width: \"100%\"\n};\n\nconst WeekHeader = (props: { mini?: boolean }) => {\n  const { mini } = props;\n  const weekDays: string[] = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <div style={container}>\n      {weekDays.map((day: string) => (\n        <div key={uuidv1()}>{mini ? day[0] : day}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default WeekHeader;\n","import React, { useContext, useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport Month from \"./Month\";\nimport { yearCalendarContext } from \"../context\";\nimport { calendarReducer } from \"../reducer\";\nimport { chunkArray } from \"../utils/arrays\";\nimport WeekHeader from \"./WeekHeader\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst FourMonths = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst MonthTitle = styled.p`\n  width: 100%;\n  padding-left: 1.5em;\n`;\n\nconst MonthCalendar = styled.div`\n  width: 320px;\n`;\nconst Year = () => {\n  const initialState = useContext(yearCalendarContext);\n  const [state, dispatch] = useReducer(calendarReducer, initialState.state);\n  const year: number = new Date(state.currentDate).getFullYear();\n  const monthDates: Date[] = Array(12)\n    .fill(1)\n    .map((e, monthNumber: number) => new Date(year, monthNumber));\n  const fourMonthOneElem: Date[][] = chunkArray(monthDates, 4);\n  return (\n    <yearCalendarContext.Provider value={{ state, dispatch }}>\n      <div>\n        {fourMonthOneElem.map(months => {\n          return (\n            <FourMonths key={uuidv1()}>\n              {months.map(date => (\n                <MonthCalendar key={uuidv1()}>\n                  <MonthTitle>{date.toDateString().split(\" \")[1]}</MonthTitle>\n                  <WeekHeader mini={true} />\n                  <Month\n                    currentDate={date.getTime()}\n                    mini={true}\n                    dispatch={dispatch}\n                    state={state}\n                  />\n                </MonthCalendar>\n              ))}\n            </FourMonths>\n          );\n        })}\n      </div>\n    </yearCalendarContext.Provider>\n  );\n};\n\nexport default Year;\n","import React from \"react\";\nimport Month from \"./Month\";\nimport WeekHeader from \"./WeekHeader\";\nimport { monthSelectorContext } from \"../context\";\nimport Year from \"./Year\";\nimport styled from \"styled-components\";\n\nconst CalendarContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  flex-direction: column;\n  justify-content: flex-end;\n  height: 100%;\n`;\nconst Calendar = () => {\n  return (\n    <monthSelectorContext.Consumer>\n      {({ state, dispatch }: any) => {\n        const currentDate = state.currentDate;\n        return (\n          <CalendarContainer>\n            {state.calendarMode === \"Month\" ? (\n              <React.Fragment>\n                <WeekHeader />\n                <Month\n                  currentDate={currentDate}\n                  mini={false}\n                  dispatch={dispatch}\n                  state={state}\n                />\n              </React.Fragment>\n            ) : (\n              <Year />\n            )}\n          </CalendarContainer>\n        );\n      }}\n    </monthSelectorContext.Consumer>\n  );\n};\n\nexport default Calendar;\n","import React, { useContext, useReducer } from \"react\";\nimport WeekHeader from \"./WeekHeader\";\nimport MonthSelector from \"./MonthSelector\";\nimport Month from \"./Month\";\nimport { miniCalendarContext } from \"../context\";\nimport { calendarReducer } from \"../reducer\";\nimport styled from \"styled-components\";\n\nconst MiniCalendarContainer = styled.div`\n  min-width: 300px;\n  zoom: 0.8;\n`;\n\nconst MiniCalendar = () => {\n  const { state } = useContext(miniCalendarContext);\n  const [MiniCalendarState, dispatch] = useReducer(calendarReducer, state);\n  return (\n    <MiniCalendarContainer>\n      <miniCalendarContext.Provider\n        value={{ state: MiniCalendarState, dispatch }}\n      >\n        <MonthSelector mini={true} context={miniCalendarContext} />\n        <WeekHeader mini={true} />\n        <Month\n          mini={true}\n          currentDate={state.currentDate}\n          dispatch={dispatch}\n          state={state}\n        />\n      </miniCalendarContext.Provider>\n    </MiniCalendarContainer>\n  );\n};\n\nexport default MiniCalendar;\n","import React, { useContext, useReducer } from \"react\";\nimport { monthSelectorContext } from \"./context\";\nimport { calendarReducer } from \"./reducer\";\nimport Header from \"./components/Header\";\nimport Calendar from \"./components/Calendar\";\nimport MiniCalendar from \"./components/MiniCalendar\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: 0.5em;\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  overflow: hidden;\n`;\n\nconst App: React.FC = () => {\n  const { state } = useContext(monthSelectorContext);\n  const [monthSelectorState, monthSelectorDispatcher] = useReducer(\n    calendarReducer,\n    state\n  );\n\n  return (\n    <AppContainer>\n      <monthSelectorContext.Provider\n        value={{\n          state: monthSelectorState,\n          dispatch: monthSelectorDispatcher\n        }}\n      >\n        <Header />\n        <div>\n          <Container>\n            <LeftSide>\n              <MiniCalendar />\n            </LeftSide>\n            <Calendar />\n          </Container>\n        </div>\n      </monthSelectorContext.Provider>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MyThemeProvider } from \"./ThemeContext\";\n\nReactDOM.render(\n  <MyThemeProvider>\n    <App />\n  </MyThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}