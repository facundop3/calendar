{"version":3,"sources":["context.ts","reducer.ts","utils/a11y.ts","theme.ts","components/Select.tsx","components/Button.tsx","components/MonthSelector.tsx","ThemeContext.tsx","components/Header.tsx","utils/arrays.ts","components/Input.tsx","components/TimePicker.tsx","components/Modal.tsx","components/TaskList.tsx","components/DayBox.tsx","components/Week.tsx","components/Month.tsx","utils/dates.ts","components/WeekHeader.tsx","components/Year.tsx","components/Calendar.tsx","components/MiniCalendar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["calendarState","state","localStorage","getItem","JSON","parse","currentDate","Date","getTime","currentDayId","currentDateMin","currentDayIdMin","calendarMode","tasks","calendarContext","React","createContext","calendarReducer","action","mini","payload","type","newState","Object","objectSpread","setItem","stringify","_action$payload$task","task","title","time","day","concat","toConsumableArray","dayId","getMonth","year","getFullYear","defineProperty","handleEnterPress","ev","callback","key","backgroundColor","theme","light","dark","textColor","hoverColor","oppositeBlue","uuidv1","require","SelectedOption","styled","a","_templateObject","OptionList","div","_templateObject2","OptionItem","_templateObject3","Select","props","defaultValue","options","handleChange","_useState","useState","_useState2","slicedToArray","showOptions","setShowOptions","_useState3","_useState4","selected","setSelected","handleSelect","target","innerText","useEffect","handleClick","react_default","createElement","className","onClick","tabIndex","onKeyPress","map","option","Btn","button","Button_templateObject","_ref","size","_ref2","_ref3","_ref4","bg","Button","ariaLabel","children","_props$type","otherProps","objectWithoutProperties","assign","aria-label","stopPropagation","MonthSelectorContainer","MonthSelector_templateObject","SelectedMonthContainer","MonthSelector_templateObject2","NavigateNextIcon","NavigateNext","MonthSelector_templateObject3","NavigateBeforeIcon","NavigateBefore","_templateObject4","withTheme","onlyYear","dispatch","stringDateArr","toDateString","split","month","previusDate","nextDate","style","zoom","components_Button","arial-label","ThemeToggleContext","ThemeProvider","CalendarIcon","CalendarAlt","Header_templateObject","HeaderTitle","Header_templateObject2","Title","h2","Header_templateObject3","NavBar","nav","Header_templateObject4","Sky","_templateObject5","themeToggle","useContext","components_MonthSelector","toggle","mode","components_Select","chunkArray","myArray","chunk_size","index","arrayLength","length","tempArray","myChunk","slice","push","InputContainer","label","Input_templateObject","InputDescription","small","Input_templateObject2","Input","placeholder","required","value","aria-required","focus","onChange","TimePickerContainer","TimePicker_templateObject","TimePickerValue","TimePicker_templateObject2","ControlsContainer","TimePicker_templateObject3","PlusIcon","Plus","TimePicker_templateObject4","MinusIcon","Minus","TimePicker_templateObject5","TimePicker","date","currentTime","setCurrentTime","_currentTime$toTimeSt","toTimeString","_currentTime$toTimeSt2","hours","minutes","changeMinutes","sign","fiveMinutesInMiliseconds","CloseIcon","Close","Modal_templateObject","ModalContainer","Modal_templateObject2","TaskName","Modal_templateObject3","Modal","dayIndex","showTimePicker","setShowTimePicker","setTime","_useState5","_useState6","setTitle","toggleModal","react_addons_css_transition_group_default","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","left","position","timeStamp","components_Input","components_TimePicker","Task","li","TaskList_templateObject","Container","ul","TaskList_templateObject2","TaskList","DayBoxContainer","DayBox_templateObject","DayContent","DayBox_templateObject2","DayBox","_props$day","disabled","_props$state","todayTasks","filter","aria-disabled","components_Modal","getDate","components_TaskList","Week","days","Consumer","display","components_DayBox","MonthContainer","Month_templateObject","Month","monthDays","monthNumnber","lastMonthDay","Array","fill","e","getDaysOnMonth","_monthDays$slice","firstDay","_monthDays$slice3","lastDay","firstBlanks","getDay","LastBlanks","blankFilledWeeks","weekDays","components_Week","container","justifyContent","alignItems","width","WeekHeader","FourMonths","Year_templateObject","MonthTitle","p","Year_templateObject2","MonthCalendar","Year_templateObject3","Year","monthDates","monthNumber","fourMonthOneElem","months","components_WeekHeader","components_Month","CalendarContainer","Calendar_templateObject","Calendar","Fragment","components_Year","MiniCalendarContainer","MiniCalendar_templateObject","MiniCalendar","App_templateObject","LeftSide","App_templateObject2","AppContainer","App_templateObject3","App","_useReducer","useReducer","_useReducer2","monthSelectorState","monthSelectorDispatcher","Provider","components_Header","App_Container","components_MiniCalendar","components_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","_React$useState","_React$useState2","themeState","setThemeState","Wrapper","ThemeContext_templateObject","styled_components_browser_esm","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.569f9c86.chunk.js","sourcesContent":["import React, { Dispatch } from \"react\";\nimport { calendarState as calendarStateInterface, action } from \"./interfaces\";\n\nconst calendarState: {\n  state: calendarStateInterface;\n  dispatch?: Dispatch<action>;\n} = {\n  state: localStorage.getItem(\"calendarState\")\n    ? JSON.parse(\n        localStorage.getItem(\"calendarState\") || \"{calalendarMode:'Month'}\"\n      )\n    : {\n        currentDate: new Date().getTime(),\n        currentDayId: 0,\n        currentDateMin: new Date().getTime(),\n        currentDayIdMin: 0,\n        calendarMode: \"\",\n        tasks: []\n      }\n};\n\nexport const calendarContext = React.createContext(calendarState);\n","import { calendarState, action as actionI } from \"./interfaces\";\n\nexport const calendarReducer = (\n  state: calendarState,\n  action: actionI\n): calendarState => {\n  const mini = action.payload ? action.payload.mini : false;\n  switch (action.type) {\n    case \"CHANGE_CALENDAR_MODE\":\n      return (() => {\n        const newState = {\n          ...state,\n          calendarMode: action.payload.calendarMode\n        };\n        localStorage.setItem(\n          \"calendarState\",\n          JSON.stringify({\n            ...newState,\n            currentDate: newState.currentDate\n          })\n        );\n        return newState;\n      })();\n\n    case \"ADD_TASK\":\n      return (() => {\n        const { title, time, day } = action.payload.task;\n        const newState = {\n          ...state,\n          tasks: [...state.tasks, { title, time, day }],\n          currentDayId: 0\n        };\n        localStorage.setItem(\"calendarState\", JSON.stringify(newState));\n        return newState;\n      })();\n\n    case \"TOGGLE_MODAL\":\n      return (() => {\n        const newState = {\n          ...state,\n          currentDayId: action.payload.dayId\n        };\n        localStorage.setItem(\"calendarState\", JSON.stringify(newState));\n\n        return newState;\n      })();\n    case \"NEXT_MONTH\": {\n      let newState: calendarState;\n      const currentDate = mini ? \"currentDateMin\" : \"currentDate\";\n      if (new Date(state[currentDate]).getMonth() === 11) {\n        const year = new Date(state[currentDate]).getFullYear() + 1;\n        newState = {\n          ...state,\n          [currentDate]: new Date(year, 0).getTime()\n        };\n      } else {\n        newState = {\n          ...state,\n          [currentDate]: new Date(\n            new Date(state[currentDate]).getFullYear(),\n            new Date(state[currentDate]).getMonth() + 1\n          ).getTime()\n        };\n      }\n      localStorage.setItem(\"calendarState\", JSON.stringify(newState));\n      return newState;\n    }\n\n    case \"PREV_MONTH\": {\n      let newState: calendarState;\n      const currentDate = mini ? \"currentDateMin\" : \"currentDate\";\n      if (new Date(state[currentDate]).getMonth() === 0) {\n        newState = {\n          ...state,\n          [currentDate]: new Date(\n            new Date(state[currentDate]).getFullYear() - 1,\n            11\n          ).getTime()\n        };\n      } else {\n        newState = {\n          ...state,\n          [currentDate]: new Date(\n            new Date(state[currentDate]).getFullYear(),\n            new Date(state[currentDate]).getMonth() - 1\n          ).getTime()\n        };\n      }\n      localStorage.setItem(\"calendarState\", JSON.stringify(newState));\n      return newState;\n    }\n\n    case \"PREV_YEAR\":\n      return (() => {\n        const newState = {\n          ...state,\n          currentDate: new Date(\n            new Date(state.currentDate).getFullYear() - 1,\n            new Date(state.currentDate).getMonth()\n          ).getTime()\n        };\n        localStorage.setItem(\"calendarState\", JSON.stringify(newState));\n        return newState;\n      })();\n    case \"NEXT_YEAR\":\n      return (() => {\n        const newState = {\n          ...state,\n          currentDate: new Date(\n            new Date(state.currentDate).getFullYear() + 1,\n            new Date(state.currentDate).getMonth()\n          ).getTime()\n        };\n        localStorage.setItem(\"calendarState\", JSON.stringify(newState));\n        return newState;\n      })();\n    default:\n      return state;\n  }\n};\n","export const handleEnterPress = (ev: any, callback: (e: any) => any) => {\n  if (ev.key === \"Enter\") {\n    return callback(ev);\n  }\n};\n","import theme from \"styled-theming\";\n\nexport const backgroundColor = theme(\"mode\", {\n  light: \"#fafafa\",\n  dark: \"#222\"\n});\n\nexport const textColor = theme(\"mode\", {\n  light: \"#000\",\n  dark: \"#fff\"\n});\n\nexport const hoverColor = theme(\"mode\", {\n  light: \"#fafafa\",\n  dark: \"grey\"\n});\n\nexport const oppositeBlue = theme(\"mode\", {\n  light: \"#191970\",\n  dark: \"#0094d5\"\n});\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { handleEnterPress } from \"../utils/a11y\";\nimport { textColor, hoverColor, backgroundColor } from \"../theme\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst SelectedOption = styled.a`\n  color: ${textColor} !important;\n  border-radius: 4px;\n  &:hover {\n    background-color: ${hoverColor} !important;\n  }\n  &:focus {\n    background-color: ${hoverColor} !important;\n  }\n  &:focus-within {\n    background-color: ${hoverColor} !important;\n  }\n`;\n\nconst OptionList = styled.div`\n  background-color: ${hoverColor} !important;\n`;\nconst OptionItem = styled.a`\n  color: ${textColor} !important;\n  &:hover {\n    background-color: ${backgroundColor} !important;\n  }\n`;\nconst Select = (props: {\n  options: string[];\n  defaultValue: string;\n  handleChange?: (p: string) => any;\n}) => {\n  const { defaultValue, options, handleChange } = props;\n  const [showOptions, setShowOptions] = useState<boolean>(false);\n  const [selected, setSelected] = useState<string>(defaultValue);\n  const handleSelect = (ev: any) => {\n    setSelected(ev.target.innerText);\n  };\n  useEffect(() => {\n    handleChange && handleChange(selected);\n  }, [selected]);\n  const handleClick = () => setShowOptions(!showOptions);\n  return (\n    <div\n      className=\"navbar-item has-dropdown is-hoverable\"\n      onClick={() => handleClick()}\n      tabIndex={0}\n      onKeyPress={ev => handleEnterPress(ev, handleClick)}\n    >\n      <SelectedOption className=\"navbar-link\">{selected}</SelectedOption>\n      <OptionList className=\"navbar-dropdown\">\n        {options.map(option => (\n          <OptionItem\n            className=\"navbar-item\"\n            key={uuidv1()}\n            onClick={handleSelect}\n            onKeyPress={ev => handleEnterPress(ev, handleSelect)}\n            tabIndex={0}\n          >\n            {option}\n          </OptionItem>\n        ))}\n      </OptionList>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Btn = styled.button`\n  width: ${({ size }: { size?: number }) => size}px;\n  height: ${({ size }: { size?: number }) => size}px;\n  border-radius: ${({ size }: { size?: number }) => (size ? \"50%\" : \"\")};\n  margin: 0.25em;\n  background-color: ${({ bg }: any) => bg} !important;\n`;\n\nconst Button = (props: {\n  children: any;\n  ariaLabel: string;\n  type?: string;\n  style?: {};\n  size?: number;\n  transparent?: boolean;\n  bg?: string;\n  onClick?: (ev: any) => any;\n}) => {\n  const {\n    ariaLabel,\n    children,\n    type = \"is-link\",\n    onClick,\n    size,\n    ...otherProps\n  } = props;\n  const stopPropagation = (ev: any) => {\n    ev.stopPropagation();\n    onClick && onClick(ev);\n  };\n  return (\n    <Btn\n      bg={props.bg}\n      aria-label={ariaLabel}\n      className={`button ${type}`}\n      onClick={stopPropagation}\n      {...otherProps}\n    >\n      {children}\n    </Btn>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"./Button\";\nimport { NavigateNext } from \"styled-icons/material/NavigateNext\";\nimport { NavigateBefore } from \"styled-icons/material/NavigateBefore\";\nimport styled, { withTheme } from \"styled-components\";\nimport { textColor } from \"../theme\";\nimport { action, calendarState } from \"../interfaces\";\n\nconst MonthSelectorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  button {\n    background-color: transparent !important;\n  }\n  svg {\n    color: ${textColor};\n  }\n  .btn--link {\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .btn--link:hover {\n    background-color: rgba(119, 136, 153, 0.2);\n  }\n`;\n\nconst SelectedMonthContainer = styled.div`\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst NavigateNextIcon = styled(NavigateNext)`\n  height: 30px;\n  font-weight: bold;\n`;\n\nconst NavigateBeforeIcon = styled(NavigateBefore)`\n  height: 30px;\n  font-weight: bold;\n`;\n\nconst MonthSelector = (props: {\n  mini?: boolean;\n  onlyYear?: boolean;\n  theme?: { mode: string };\n  dispatch?: React.Dispatch<action>;\n  state: calendarState;\n}) => {\n  const { mini, onlyYear, dispatch, state } = props;\n  const currentDate = mini ? state.currentDateMin : state.currentDate;\n  const stringDateArr: string[] = new Date(currentDate)\n    .toDateString()\n    .split(\" \");\n  const month = stringDateArr[1];\n  const year = stringDateArr[3];\n  const previusDate = onlyYear ? \"PREV_YEAR\" : \"PREV_MONTH\";\n  const nextDate = onlyYear ? \"NEXT_YEAR\" : \"NEXT_MONTH\";\n\n  return (\n    <MonthSelectorContainer style={{ zoom: mini ? 0.7 : 1 }}>\n      <Button\n        ariaLabel=\"Previus month\"\n        size={50}\n        onClick={() =>\n          dispatch && dispatch({ type: previusDate, payload: { mini } })\n        }\n      >\n        <NavigateBeforeIcon />\n      </Button>\n      <Button\n        size={50}\n        ariaLabel=\"Next month\"\n        onClick={() =>\n          dispatch && dispatch({ type: nextDate, payload: { mini } })\n        }\n      >\n        <NavigateNextIcon />\n      </Button>\n      <SelectedMonthContainer arial-label=\"testing\" tabIndex={0}>\n        {`${onlyYear ? \"\" : month + \" - \"}${year}`}\n      </SelectedMonthContainer>\n    </MonthSelectorContainer>\n  );\n};\n\nexport default withTheme(MonthSelector);\n","import React from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { backgroundColor, textColor } from \"./theme\";\n\nconst ThemeToggleContext: any = React.createContext(\"\");\n\nexport const useTheme = () => React.useContext(ThemeToggleContext);\n\nexport const MyThemeProvider = ({ children }: { children: any }) => {\n  const [themeState, setThemeState] = React.useState({\n    mode: localStorage.getItem(\"theme\") || \"light\"\n  });\n\n  const Wrapper = styled.div`\n    background-color: ${backgroundColor};\n    color: ${textColor};\n  `;\n  const toggle = () => {\n    const mode = themeState.mode === \"light\" ? \"dark\" : \"light\";\n    setThemeState({ mode });\n    localStorage.setItem(\"theme\", mode);\n  };\n\n  return (\n    <ThemeToggleContext.Provider value={{ toggle }}>\n      <ThemeProvider\n        theme={{\n          mode: themeState.mode\n        }}\n      >\n        <Wrapper>{children}</Wrapper>\n      </ThemeProvider>\n    </ThemeToggleContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n","import React, { Dispatch } from \"react\";\nimport Select from \"./Select\";\nimport MonthSelector from \"./MonthSelector\";\nimport styled, { withTheme } from \"styled-components\";\nimport { CalendarAlt } from \"styled-icons/fa-solid/CalendarAlt\";\nimport { backgroundColor, textColor, oppositeBlue } from \"../theme\";\nimport { useTheme } from \"../ThemeContext\";\nimport Button from \"./Button\";\nimport { calendarState, action } from \"../interfaces\";\n\nconst CalendarIcon = styled(CalendarAlt)`\n  height: 40px;\n  color: #3866d0;\n  margin-right: 0.5em;\n`;\nconst HeaderTitle = styled.div`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-family: sans-serif;\n  color: ${textColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NavBar = styled.nav`\n  border-bottom: 0.5px solid ${textColor};\n  margin-bottom: \"1em\";\n  background-color: ${backgroundColor} !important;\n  display: flex;\n  align-items: center !important;\n  justify-content: center;\n  padding-left: 0.5em;\n`;\nconst Sky = styled.div`\n  background-color: ${oppositeBlue};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  max-height: 40px;\n  max-width: 40px;\n`;\nconst Header = (props: {\n  state: calendarState;\n  dispatch?: Dispatch<action>;\n  theme: { mode: string };\n}) => {\n  const { dispatch, state } = props;\n  const themeToggle: any = useTheme();\n  const calendarMode = state.calendarMode;\n  const handleChange = (calendarMode: string) => {\n    dispatch &&\n      dispatch({ type: \"CHANGE_CALENDAR_MODE\", payload: { calendarMode } });\n  };\n  return (\n    <NavBar className=\"navbar\">\n      <div className=\"navbar-brand\">\n        <HeaderTitle>\n          <CalendarIcon />\n          <Title>Calendar</Title>\n        </HeaderTitle>\n      </div>\n\n      <MonthSelector\n        onlyYear={calendarMode === \"Year\"}\n        mini={false}\n        dispatch={dispatch}\n        state={state}\n      />\n      <Sky>\n        <Button\n          ariaLabel=\"night mode\"\n          onClick={() => themeToggle.toggle()}\n          bg=\"transparent\"\n        >\n          {props.theme.mode === \"dark\" ? \"🌝\" : \"🌚\"}\n        </Button>\n      </Sky>\n      <div className=\"navbar-end\">\n        <div className=\"navbar-item\">\n          <Select\n            defaultValue={calendarMode || \"Month\"}\n            options={[\"Month\", \"Year\"]}\n            handleChange={handleChange}\n          />\n        </div>\n      </div>\n    </NavBar>\n  );\n};\nexport default withTheme(Header);\n","/**\n * Returns an array with arrays of the given size.\n *\n * @param myArray {Array} array to split\n * @param chunk_size {Integer} Size of every group\n */\nexport const chunkArray = (\n  myArray: any[],\n  chunk_size: number\n): Array<Array<any>> => {\n  let index: number = 0;\n  let arrayLength: number = myArray.length;\n  let tempArray: any[][] = [];\n\n  for (index = 0; index < arrayLength; index += chunk_size) {\n    const myChunk = myArray.slice(index, index + chunk_size);\n    // Do something if you want with the group\n    tempArray.push(myChunk);\n  }\n\n  return tempArray;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst InputContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\nconst InputDescription = styled.small`\n  color: gray;\n`;\nconst Input = (props: {\n  label: string;\n  placeholder?: string;\n  type: string;\n  required?: boolean;\n  value?: string;\n  handleChange?: (ev: any) => any;\n}) => {\n  const handleInputClick = (ev: any) => {\n    ev.target.focus();\n  };\n  const { label, placeholder, type, required, value, handleChange } = props;\n  const onChange = (ev: any) => {\n    handleChange && handleChange(ev.target.value);\n  };\n  return (\n    <InputContainer>\n      <InputDescription>{label}</InputDescription>\n      <input\n        className=\"input\"\n        placeholder={placeholder}\n        type={type}\n        aria-required={required}\n        onClick={handleInputClick}\n        value={value}\n        onChange={onChange}\n      />\n    </InputContainer>\n  );\n};\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport styled from \"styled-components\";\nimport { Plus } from \"styled-icons/fa-solid/Plus\";\nimport { Minus } from \"styled-icons/typicons/Minus\";\n\nconst TimePickerContainer = styled.div`\n  display: flex;\n  max-width: 80px;\n`;\n\nconst TimePickerValue = styled.div`\n  padding: 0.5em;\n  display: flex;\n  p {\n    margin: 0;\n  }\n`;\nconst ControlsContainer = styled.div`\n  display: inline-grid;\n  zoom: 0.7;\n\n  button {\n    margin: 0;\n    padding: 4px 8px;\n  }\n`;\n\nconst PlusIcon = styled(Plus)`\n  height: 15px;\n`;\n\nconst MinusIcon = styled(Minus)`\n  height: 15px;\n`;\nconst TimePicker = (props: { date: Date; handleChange?: any }) => {\n  const { date, handleChange } = props;\n  const [currentTime, setCurrentTime] = useState<Date>(date);\n  const [hours, minutes] = currentTime.toTimeString().split(\":\");\n  const changeMinutes = (sign: number) => {\n    const fiveMinutesInMiliseconds = sign * 5 * 60000;\n    setCurrentTime(new Date(currentTime.getTime() + fiveMinutesInMiliseconds));\n  };\n  useEffect(() => {\n    handleChange && handleChange(currentTime);\n  }, [currentTime, handleChange]);\n  return (\n    <TimePickerContainer>\n      <TimePickerValue>\n        <p>\n          {hours}:{minutes}\n        </p>\n      </TimePickerValue>\n      <ControlsContainer>\n        <Button ariaLabel=\"Add 5 minutes\" onClick={() => changeMinutes(1)}>\n          <PlusIcon />\n        </Button>\n        <Button\n          ariaLabel=\"substract 5 minutes\"\n          onClick={() => changeMinutes(-1)}\n        >\n          <MinusIcon />\n        </Button>\n      </ControlsContainer>\n    </TimePickerContainer>\n  );\n};\n\nexport default TimePicker;\n","import React, { useState } from \"react\";\nimport Button from \"./Button\";\nimport Input from \"./Input\";\nimport { day as iday } from \"../interfaces\";\nimport TimePicker from \"./TimePicker\";\nimport { Close } from \"styled-icons/material/Close\";\nimport styled from \"styled-components\";\nimport { textColor, backgroundColor, hoverColor } from \"../theme\";\nimport \"./styles/MountTransition.css\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nconst CloseIcon = styled(Close)`\n  height: 15px;\n  color: ${textColor};\n`;\nconst ModalContainer = styled.div`\n  min-height: 250px;\n  min-width: 200px;\n  position: absolute;\n  background-color: ${backgroundColor} !important;\n  color: ${textColor} !important;\n  z-index: 3;\n  border: 0.5px solid ${hoverColor} !important;\n`;\nconst TaskName = styled.div`\n  display: flex;\n  justify-content: space-between;\n  button {\n    background-color: transparent !important;\n  }\n`;\nconst Modal = (props: { dayIndex: number; day: iday; dispatch: any }) => {\n  const { dayIndex, day, dispatch } = props;\n\n  const [showTimePicker, setShowTimePicker] = useState<boolean>(false);\n  const [time, setTime] = useState<Date>(new Date());\n  const [title, setTitle] = useState<string>(\"\");\n  const toggleModal = () => {\n    dispatch({ type: \"TOGGLE_MODAL\", payload: \"\" });\n  };\n  const stopPropagation = (ev: any) => {\n    ev.stopPropagation();\n  };\n  const saveTask = (ev: any) => {\n    dispatch({ type: \"ADD_TASK\", payload: { task: { title, time, day } } });\n  };\n\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"modal\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <ModalContainer\n        className=\"box\"\n        style={{\n          left: dayIndex < 3 ? \"100px\" : \"-100px\",\n          position: \"absolute\"\n        }}\n        onClick={stopPropagation}\n      >\n        <TaskName>\n          <h4>{title}</h4>\n          <Button ariaLabel=\"close\" onClick={toggleModal}>\n            <CloseIcon />\n          </Button>\n        </TaskName>\n        <p>{new Date(day.timeStamp).toDateString()}</p>\n        <Input\n          label=\"Add title\"\n          placeholder=\"Do important stuff\"\n          type=\"text\"\n          handleChange={setTitle}\n          value={title}\n        />\n        <Button\n          ariaLabel=\"Add an hour\"\n          onClick={() => setShowTimePicker(!showTimePicker)}\n        >\n          Add an hour\n        </Button>\n        {showTimePicker && <TimePicker date={time} handleChange={setTime} />}\n        <div>\n          <Button ariaLabel=\"Save button\" onClick={saveTask}>\n            Save\n          </Button>\n          <Button\n            ariaLabel=\"Cancel button\"\n            type=\"is-light\"\n            onClick={toggleModal}\n          >\n            cancel\n          </Button>\n        </div>\n      </ModalContainer>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { task } from \"../interfaces\";\n\nconst Task = styled.li`\n  list-style-type: none;\n  border-radius: 6px;\n  color: white;\n  padding: 0.5em;\n`;\nconst Container = styled.ul`\n  position: absolute;\n  padding: 0.5em;\n  margin: 0;\n  top: 0;\n  width: 100%;\n  display: contents;\n`;\nconst TaskList = (props: { tasks: task[]; mini: boolean }) => {\n  const { tasks, mini } = props;\n  return (\n    <Container>\n      {!mini &&\n        tasks.map(task => <Task className=\"tag is-link\">{task.title}</Task>)}\n    </Container>\n  );\n};\n\nexport default TaskList;\n","import React from \"react\";\nimport { day as dayI, action } from \"../interfaces\";\nimport Modal from \"./Modal\";\nimport { handleEnterPress } from \"../utils/a11y\";\nimport TaskList from \"./TaskList\";\nimport styled from \"styled-components\";\nimport { backgroundColor, textColor } from \"../theme\";\n\nconst DayBoxContainer = styled.div`\n  position: relative;\n  margin: 0 !important;\n  width: 100%;\n  background-color: ${backgroundColor} !important;\n  color: ${textColor} !important;\n`;\n\nconst DayContent = styled.div`\n  color: ${textColor};\n`;\n\nconst DayBox = (props: {\n  weekDay?: string;\n  day: dayI;\n  index: number;\n  mini: boolean;\n  state: any;\n  dispatch?: React.Dispatch<action>;\n}) => {\n  const {\n    day: { timeStamp, disabled },\n    day,\n    index,\n    mini,\n    dispatch,\n    state: { currentDayId, tasks }\n  } = props;\n  const tabIndex = disabled ? {} : { tabIndex: 0 };\n  const todayTasks = tasks.filter(\n    ({ day }: { day: dayI }) => day.timeStamp === timeStamp\n  );\n  const toggleModal = (ev: any) => {\n    if (!disabled && dispatch && !mini) {\n      dispatch({ type: \"TOGGLE_MODAL\", payload: { dayId: timeStamp } });\n    }\n  };\n  return (\n    <DayBoxContainer\n      className={mini ? \"\" : \"box\"}\n      onClick={toggleModal}\n      onKeyPress={ev => handleEnterPress(ev, toggleModal)}\n      aria-disabled={disabled}\n      {...tabIndex}\n    >\n      {!disabled && !mini && currentDayId === timeStamp && (\n        <Modal dayIndex={index} day={day} dispatch={dispatch} />\n      )}\n      <article className=\"media\">\n        <div className=\"media-content\">\n          <DayContent className=\"content\">\n            <p\n              aria-label={!disabled ? new Date(timeStamp).toDateString() : \"\"}\n              className={mini ? \"hover-date\" : \"\"}\n            >\n              {disabled ? timeStamp : new Date(timeStamp).getDate()}\n            </p>\n            <TaskList tasks={todayTasks} mini={mini} />\n          </DayContent>\n        </div>\n      </article>\n    </DayBoxContainer>\n  );\n};\n\nexport default DayBox;\n","import React from \"react\";\nimport DayBox from \"./DayBox\";\nimport { day } from \"../interfaces\";\nimport { calendarContext } from \"../context\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst Week = (props: { days: day[]; mini: boolean }) => {\n  const { days, mini } = props;\n\n  return (\n    <calendarContext.Consumer>\n      {({ dispatch, state }) => (\n        <div style={{ display: \"flex\" }}>\n          {days.map((day: day, index: number) => {\n            return (\n              <DayBox\n                day={day}\n                key={uuidv1()}\n                index={index}\n                mini={mini}\n                state={state}\n                dispatch={dispatch}\n              />\n            );\n          })}\n        </div>\n      )}\n    </calendarContext.Consumer>\n  );\n};\n\nexport default Week;\n","import React from \"react\";\nimport { getDaysOnMonth } from \"../utils/dates\";\nimport { chunkArray } from \"../utils/arrays\";\nimport Week from \"./Week\";\nimport { day, calendarState } from \"../interfaces\";\nimport styled from \"styled-components\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport \"./styles/MountTransition.css\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst MonthContainer = styled.div`\n  justify-content: space-arround;\n  margin: 1em;\n  width: 100%;\n`;\nconst Month = (props: {\n  mini: boolean;\n  currentDate: number;\n  state?: calendarState;\n}) => {\n  const { currentDate, mini } = props;\n  const monthDays: day[] = getDaysOnMonth(new Date(currentDate));\n  const [{ timeStamp: firstDay }] = monthDays.slice(0, 1);\n  const [{ timeStamp: lastDay }] = monthDays.slice(-1);\n  const firstBlanks = Array(new Date(firstDay).getDay()).fill({\n    value: \"x\",\n    disabled: true\n  });\n  const LastBlanks = Array(6 - new Date(lastDay).getDay()).fill({\n    value: \"x\",\n    disabled: true\n  });\n  const blankFilledWeeks: day[][] = chunkArray(\n    [...firstBlanks, ...monthDays, ...LastBlanks],\n    7\n  );\n\n  return (\n    <ReactCSSTransitionGroup\n      transitionName=\"example\"\n      transitionAppear={true}\n      transitionAppearTimeout={500}\n      transitionEnter={false}\n      transitionLeave={false}\n    >\n      <MonthContainer>\n        {blankFilledWeeks.map((weekDays: day[]) => (\n          <Week days={weekDays} key={uuidv1()} mini={mini} />\n        ))}\n      </MonthContainer>\n    </ReactCSSTransitionGroup>\n  );\n};\n\nexport default Month;\n","import { day } from \"../interfaces\";\nexport const getDaysOnMonth = (date: Date): day[] => {\n  const year = date.getFullYear();\n  const monthNumnber = date.getMonth();\n  let currentDate = new Date(year, monthNumnber);\n  const month: number = currentDate.getMonth();\n  const lastMonthDay = new Date(year, month + 1, 0).getDate();\n  const days: day[] = Array(lastMonthDay)\n    .fill(1)\n    .map((e, index: number) => {\n      const timeStamp: number = new Date(year, month, index + 1).getTime();\n      return {\n        timeStamp,\n        disabled: false\n      };\n    });\n  return days;\n};\n","import React from \"react\";\nconst uuidv1 = require(\"uuid/v1\");\nconst container = {\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  alignItems: \"center\",\n  width: \"100%\"\n};\n\nconst WeekHeader = (props: { mini?: boolean }) => {\n  const { mini } = props;\n  const weekDays: string[] = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <div style={container}>\n      {weekDays.map((day: string) => (\n        <div key={uuidv1()}>{mini ? day[0] : day}</div>\n      ))}\n    </div>\n  );\n};\n\nexport default WeekHeader;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Month from \"./Month\";\nimport { chunkArray } from \"../utils/arrays\";\nimport WeekHeader from \"./WeekHeader\";\nimport { calendarState } from \"../interfaces\";\nconst uuidv1 = require(\"uuid/v1\");\n\nconst FourMonths = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\nconst MonthTitle = styled.p`\n  width: 100%;\n  padding-left: 1.5em;\n`;\n\nconst MonthCalendar = styled.div`\n  width: 320px;\n`;\nconst Year = (props: { year: number; state: calendarState }) => {\n  const { year, state } = props;\n  const monthDates: Date[] = Array(12)\n    .fill(1)\n    .map((e, monthNumber: number) => new Date(year, monthNumber));\n  const fourMonthOneElem: Date[][] = chunkArray(monthDates, 4);\n  return (\n    <div>\n      {fourMonthOneElem.map(months => {\n        return (\n          <FourMonths key={uuidv1()}>\n            {months.map(date => (\n              <MonthCalendar key={uuidv1()}>\n                <MonthTitle>{date.toDateString().split(\" \")[1]}</MonthTitle>\n                <WeekHeader mini={true} />\n                <Month currentDate={date.getTime()} mini={true} state={state} />\n              </MonthCalendar>\n            ))}\n          </FourMonths>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Year;\n","import React from \"react\";\nimport Month from \"./Month\";\nimport WeekHeader from \"./WeekHeader\";\nimport { calendarContext } from \"../context\";\nimport Year from \"./Year\";\nimport styled from \"styled-components\";\n\nconst CalendarContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  flex-direction: column;\n  justify-content: flex-end;\n  height: 100%;\n`;\nconst Calendar = () => {\n  return (\n    <calendarContext.Consumer>\n      {({ state, dispatch }: any) => {\n        const currentDate = state.currentDate;\n        return (\n          <CalendarContainer>\n            {state.calendarMode === \"Month\" ? (\n              <React.Fragment>\n                <WeekHeader />\n                <Month currentDate={currentDate} mini={false} state={state} />\n              </React.Fragment>\n            ) : (\n              <Year\n                year={new Date(state.currentDate).getFullYear()}\n                state={state}\n              />\n            )}\n          </CalendarContainer>\n        );\n      }}\n    </calendarContext.Consumer>\n  );\n};\n\nexport default Calendar;\n","import React from \"react\";\nimport WeekHeader from \"./WeekHeader\";\nimport MonthSelector from \"./MonthSelector\";\nimport Month from \"./Month\";\nimport { calendarContext } from \"../context\";\nimport styled from \"styled-components\";\n\nconst MiniCalendarContainer = styled.div`\n  min-width: 300px;\n  zoom: 0.8;\n`;\n\nconst MiniCalendar = () => {\n  return (\n    <MiniCalendarContainer>\n      <calendarContext.Consumer>\n        {({ state, dispatch }) => (\n          <React.Fragment>\n            <MonthSelector mini={true} dispatch={dispatch} state={state} />\n            <WeekHeader mini={true} />\n            <Month\n              mini={true}\n              currentDate={state.currentDateMin}\n              state={state}\n            />\n          </React.Fragment>\n        )}\n      </calendarContext.Consumer>\n    </MiniCalendarContainer>\n  );\n};\n\nexport default MiniCalendar;\n","import React, { useContext, useReducer } from \"react\";\nimport { calendarContext } from \"./context\";\nimport { calendarReducer } from \"./reducer\";\nimport Header from \"./components/Header\";\nimport Calendar from \"./components/Calendar\";\nimport MiniCalendar from \"./components/MiniCalendar\";\nimport \"../node_modules/bulma/css/bulma.min.css\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: 0.5em;\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  left: 0;\n  height: 100%;\n  justify-content: center;\n  align-items: center;\n`;\nconst AppContainer = styled.div`\n  min-height: 100vh;\n  overflow: hidden;\n`;\n\nconst App: React.FC = () => {\n  const { state } = useContext(calendarContext);\n  const [monthSelectorState, monthSelectorDispatcher] = useReducer(\n    calendarReducer,\n    state\n  );\n\n  return (\n    <AppContainer>\n      <calendarContext.Provider\n        value={{\n          state: monthSelectorState,\n          dispatch: monthSelectorDispatcher\n        }}\n      >\n        <calendarContext.Consumer>\n          {({ dispatch, state }) => (\n            <Header state={state} dispatch={dispatch} />\n          )}\n        </calendarContext.Consumer>\n        <div>\n          <Container>\n            <LeftSide>\n              <MiniCalendar />\n            </LeftSide>\n            <Calendar />\n          </Container>\n        </div>\n      </calendarContext.Provider>\n    </AppContainer>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MyThemeProvider } from \"./ThemeContext\";\n\nReactDOM.render(\n  <MyThemeProvider>\n    <App />\n  </MyThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}